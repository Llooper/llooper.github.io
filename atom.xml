<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[FLINT LI's Blog]]></title>
  <subtitle><![CDATA[Walk steps step by step]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="flintli.xyz/"/>
  <updated>2016-06-20T09:32:14.000Z</updated>
  <id>flintli.xyz/</id>
  
  <author>
    <name><![CDATA[FLINT LI]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[好的Blog应该跟大家分享]]></title>
    <link href="flintli.xyz/2100/05/24/Android-study/"/>
    <id>flintli.xyz/2100/05/24/Android-study/</id>
    <published>2100-05-24T07:13:57.000Z</published>
    <updated>2016-06-20T09:32:14.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/luoshengyang/article/details/6618363" target="_blank" rel="external">老罗的Android学习之路</a><br>多去别人的blog逛逛，老罗很牛逼，要多学习。</p>
<p><a href="http://wangkuiwu.github.io/2100/01/01/index/" target="_blank" rel="external">wangkuiwu’ Homepage</a>看到最好的blog之一，很值得学习，进修ing。。。</p>
<p><a href="http://gityuan.com/" target="_blank" rel="external">http://gityuan.com/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://blog.csdn.net/luoshengyang/article/details/6618363" target="_blank" rel="external">老罗的Android学习之路</a><br>多去别人的blog逛逛，老罗很牛]]>
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SystemUI recents]]></title>
    <link href="flintli.xyz/2016/07/22/SystemUI-recents/"/>
    <id>flintli.xyz/2016/07/22/SystemUI-recents/</id>
    <published>2016-07-22T02:28:54.000Z</published>
    <updated>2016-07-22T02:32:08.000Z</updated>
    <content type="html"><![CDATA[<p>需求：双击启动进入最近任务列表</p>
<a id="more"></a>
<h3 id="u6309_u952E_u542F_u52A8_u6D41_u7A0B"><a href="#u6309_u952E_u542F_u52A8_u6D41_u7A0B" class="headerlink" title="按键启动流程"></a>按键启动流程</h3><h4 id="u53CC_u51FB_u5B9E_u73B0_u6D41_u7A0B"><a href="#u53CC_u51FB_u5B9E_u73B0_u6D41_u7A0B" class="headerlink" title="双击实现流程"></a>双击实现流程</h4><p>文件路径:<br><code>frameworks/base/services/java/com/android/server/CarInputHub.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInputEvent</span><span class="params">(InputEvent inputEvent, <span class="keyword">int</span> policyFlags)</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">if</span> (event.getKeyCode() == KeyEvent.KEYCODE_ENTER &amp;&amp; event.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class="line">                <span class="keyword">if</span> (waitDoubleClick) &#123;</span><br><span class="line">                    waitDoubleClick = <span class="keyword">false</span>;</span><br><span class="line">                    handler.removeCallbacks(mDownRunnable);</span><br><span class="line">                    <span class="comment">//do something</span></span><br><span class="line">                    preloadRecentApps();</span><br><span class="line">                    handler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                            toggleRecentApps();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, <span class="number">100</span>);</span><br><span class="line">                    Slog.d(TAG, <span class="string">"doubleClick="</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    waitDoubleClick = <span class="keyword">true</span>;</span><br><span class="line">                    hasDown = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.getKeyCode() == KeyEvent.KEYCODE_ENTER &amp;&amp; event.getAction() == KeyEvent.ACTION_UP) &#123;</span><br><span class="line">                <span class="keyword">if</span> (hasDown) &#123;</span><br><span class="line">                    hasDown = <span class="keyword">false</span>;</span><br><span class="line">                    mDownRunnable.initKeyDownEvent(event.getDeviceId());</span><br><span class="line">                    handler.postDelayed(mDownRunnable, <span class="number">300</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">CarDownRunnable mDownRunnable = <span class="keyword">new</span> CarDownRunnable();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CarDownRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">   	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   		waitDoubleClick = <span class="keyword">false</span>;</span><br><span class="line">   		.</span><br><span class="line">   		.</span><br><span class="line">   		</span><br><span class="line">   	&#125;</span><br></pre></td></tr></table></figure>
<p>双击启动Recents，通过AIDL跟<code>StatusBarManagerService</code>进程通讯，然后<code>StatusBarManagerService</code>再通过AIDL跟<code>systemui</code>通讯，调用systemui中的接口：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************</span><br><span class="line"> * ============Double Click for systemui Recents</span><br><span class="line"> ********************************/</span></span><br><span class="line">IStatusBarService mStatusBarService;</span><br><span class="line"><span class="keyword">final</span> Object mServiceAquireLock = <span class="keyword">new</span> Object();</span><br><span class="line"><span class="keyword">boolean</span> mPreloadedRecentApps;</span><br><span class="line"></span><br><span class="line"><span class="function">IStatusBarService <span class="title">getStatusBarService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mServiceAquireLock) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mStatusBarService == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mStatusBarService = IStatusBarService.Stub.asInterface(</span><br><span class="line">                    ServiceManager.getService(<span class="string">"statusbar"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mStatusBarService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">preloadRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mPreloadedRecentApps = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        IStatusBarService statusbar = getStatusBarService();</span><br><span class="line">        <span class="keyword">if</span> (statusbar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Slog.i(TAG, <span class="string">"preloadRecentApps"</span>);</span><br><span class="line">            statusbar.preloadRecentApps();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Slog.e(TAG, <span class="string">"RemoteException when preloading recent apps"</span>, e);</span><br><span class="line">        <span class="comment">// re-acquire status bar service next time it is needed.</span></span><br><span class="line">        mStatusBarService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cancelPreloadRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mPreloadedRecentApps) &#123;</span><br><span class="line">        mPreloadedRecentApps = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            IStatusBarService statusbar = getStatusBarService();</span><br><span class="line">            <span class="keyword">if</span> (statusbar != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Slog.i(TAG, <span class="string">"cancelPreloadRecentApps"</span>);</span><br><span class="line">                statusbar.cancelPreloadRecentApps();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            Slog.e(TAG, <span class="string">"RemoteException when showing recent apps"</span>, e);</span><br><span class="line">            <span class="comment">// re-acquire status bar service next time it is needed.</span></span><br><span class="line">            mStatusBarService = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">toggleRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mPreloadedRecentApps = <span class="keyword">false</span>; <span class="comment">// preloading no longer needs to be canceled</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        IStatusBarService statusbar = getStatusBarService();</span><br><span class="line">        <span class="keyword">if</span> (statusbar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Slog.i(TAG, <span class="string">"toggleRecentApps"</span>);</span><br><span class="line">            statusbar.toggleRecentApps();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Slog.e(TAG, <span class="string">"RemoteException when showing recent apps"</span>, e);</span><br><span class="line">        <span class="comment">// re-acquire status bar service next time it is needed.</span></span><br><span class="line">        mStatusBarService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************</span><br><span class="line"> * ============Double Click for systemui Recents</span><br><span class="line"> ********************************/</span></span><br></pre></td></tr></table></figure>
<h4 id="Systemui_u63A5_u53E3_u8C03_u7528_u6D41_u7A0B"><a href="#Systemui_u63A5_u53E3_u8C03_u7528_u6D41_u7A0B" class="headerlink" title="Systemui接口调用流程"></a>Systemui接口调用流程</h4><p>文件路径：<br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java</code>        </p>
<p>CommandQueue:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">toggleRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mList) &#123;</span><br><span class="line">            mHandler.removeMessages(MSG_TOGGLE_RECENT_APPS);</span><br><span class="line">            mHandler.obtainMessage(MSG_TOGGLE_RECENT_APPS, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>).sendToTarget();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preloadRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mList) &#123;</span><br><span class="line">            mHandler.removeMessages(MSG_PRELOAD_RECENT_APPS);</span><br><span class="line">            mHandler.obtainMessage(MSG_PRELOAD_RECENT_APPS, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>).sendToTarget();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelPreloadRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (mList) &#123;</span><br><span class="line">            mHandler.removeMessages(MSG_CANCEL_PRELOAD_RECENT_APPS);</span><br><span class="line">            mHandler.obtainMessage(MSG_CANCEL_PRELOAD_RECENT_APPS, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>).sendToTarget();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>BaseStatusBar:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toggleRecentsActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mRecents != <span class="keyword">null</span> &amp;&amp; isShowRecents()) &#123;</span><br><span class="line">            mRecents.toggleRecents(mDisplay, <span class="number">0</span>, getStatusBarView());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">preloadRecentTasksList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mRecents != <span class="keyword">null</span> &amp;&amp; isShowRecents()) &#123;</span><br><span class="line">            mRecents.preloadRecentTasksList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cancelPreloadingRecentTasksList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mRecents != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mRecents.cancelPreloadingRecentTasksList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Recents_u6D41_u7A0B"><a href="#Recents_u6D41_u7A0B" class="headerlink" title="Recents流程"></a>Recents流程</h3><p>文件路径：<br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recnt/Recents.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recent/RecentsPreloadReceiver.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recent/RecentsActivity.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recent/RecentsPanelView.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recent/RecentsHorizontalScrollView.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/recent/TaskDescription.java</code></p>
<p>发送广播：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preloadRecentTasksList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cancelPreloadingRecentTasksList();</span><br><span class="line">      Intent intent = <span class="keyword">new</span> Intent(RecentsActivity.PRELOAD_INTENT);</span><br><span class="line">      intent.setClassName(<span class="string">"com.android.systemui"</span>,</span><br><span class="line">              <span class="string">"com.android.systemui.recent.RecentsPreloadReceiver"</span>);</span><br><span class="line">      mContext.sendBroadcastAsUser(intent, <span class="keyword">new</span> UserHandle(UserHandle.USER_CURRENT));</span><br><span class="line"></span><br><span class="line">      RecentTasksLoader.getInstance(mContext).preloadFirstTask();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>接收广播，获取单例对象，实现加载缩略图（截图）：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecentsPreloadReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (RecentsActivity.PRELOAD_INTENT.equals(intent.getAction())) &#123;</span><br><span class="line">            RecentTasksLoader.getInstance(context).preloadRecentTasksList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启动start RecentsActivity，显示Recents App：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">toggleRecents</span><span class="params">(Display display, <span class="keyword">int</span> layoutDirection, View statusBarView)</span> </span>&#123;</span><br><span class="line">	Intent intent = <span class="keyword">new</span> Intent(RecentsActivity.TOGGLE_RECENTS_INTENT);</span><br><span class="line">	intent.setClassName(<span class="string">"com.android.systemui"</span>,</span><br><span class="line">		<span class="string">"com.android.systemui.recent.RecentsActivity"</span>);</span><br><span class="line">	intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK</span><br><span class="line">		| Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);</span><br><span class="line">	mContext.startActivityAsUser(intent, <span class="keyword">new</span> UserHandle(</span><br><span class="line">		UserHandle.USER_CURRENT));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="RecentsActivity_uFF1A"><a href="#RecentsActivity_uFF1A" class="headerlink" title="RecentsActivity："></a>RecentsActivity：</h4><p>添加标签，判断Recents是否已经打开显示，显示则关闭，没显示则打开。实现双击显示Recents，再次双击退出Recents。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onNewIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">    handleIntent(intent, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleIntent</span><span class="params">(Intent intent, <span class="keyword">boolean</span> checkWaitingForAnimationParam)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onNewIntent(intent);</span><br><span class="line">    <span class="keyword">if</span> (TOGGLE_RECENTS_INTENT.equals(intent.getAction())) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mRecentsPanel != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mRecentsPanel.isShowing()) &#123;</span><br><span class="line">                dismissAndGoBack();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> RecentTasksLoader recentTasksLoader = RecentTasksLoader.getInstance(<span class="keyword">this</span>);</span><br><span class="line">                mRecentsPanel.show(<span class="keyword">true</span>, recentTasksLoader.getLoadedTasks(),</span><br><span class="line">                        recentTasksLoader.isFirstScreenful(), <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关闭显示函数：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dismissAndGoBack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mRecentsPanel != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">final</span> ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;ActivityManager.RecentTaskInfo&gt; recentTasks =</span><br><span class="line">                am.getRecentTasks(<span class="number">2</span>,</span><br><span class="line">                        ActivityManager.RECENT_WITH_EXCLUDED |</span><br><span class="line">                        ActivityManager.RECENT_IGNORE_UNAVAILABLE);</span><br><span class="line">        <span class="keyword">if</span> (recentTasks.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// recents panel will take care of calling show(false) through simulateClick</span></span><br><span class="line">            am.moveTaskToFront(recentTasks.get(<span class="number">1</span>).id, ActivityManager.MOVE_TASK_WITH_HOME);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    mRecentsPanel.show(<span class="keyword">false</span>);</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="RecentsPanelView_3A"><a href="#RecentsPanelView_3A" class="headerlink" title="RecentsPanelView:"></a>RecentsPanelView:</h4><p>自定义View继承FrameLayout，用于包含整个Recents的显示布局。</p>
<p>View的主体为FrameLayout中嵌套一个HorizontalScrollView，实现监听旋转进行左右滑动。RecentsPanelView中实现Adapter，创建ItemView以及加载ItemView。   </p>
<p>View中的主要函数 Show()，主要也是判断标签，用于响应Activity的打开关闭:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">boolean</span> show, ArrayList&lt;TaskDescription&gt; recentTaskDescriptions,</span><br><span class="line">        <span class="keyword">boolean</span> firstScreenful, <span class="keyword">boolean</span> animateIconOfFirstTask)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (show &amp;&amp; mCallUiHiddenBeforeNextReload) &#123;</span><br><span class="line">        onUiHidden();</span><br><span class="line">        recentTaskDescriptions = <span class="keyword">null</span>;</span><br><span class="line">        mAnimateIconOfFirstTask = <span class="keyword">false</span>;</span><br><span class="line">        mWaitingForWindowAnimation = <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mAnimateIconOfFirstTask = animateIconOfFirstTask;</span><br><span class="line">        mWaitingForWindowAnimation = animateIconOfFirstTask;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (show) &#123;</span><br><span class="line">        mWaitingToShow = <span class="keyword">true</span>;</span><br><span class="line">        refreshRecentTasksList(recentTaskDescriptions, firstScreenful);</span><br><span class="line">        showIfReady();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        showImpl(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>刷新界面显示内容：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshRecentTasksList</span><span class="params">(</span><br><span class="line">        ArrayList&lt;TaskDescription&gt; recentTasksList, <span class="keyword">boolean</span> firstScreenful)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mRecentTaskDescriptions == <span class="keyword">null</span> &amp;&amp; recentTasksList != <span class="keyword">null</span>) &#123;</span><br><span class="line">        onTasksLoaded(recentTasksList, firstScreenful);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mRecentTasksLoader.loadTasksInBackground();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现每个ItemView点击函数：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleOnClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    ViewHolder holder = (ViewHolder) view.getTag();</span><br><span class="line">    TaskDescription ad = holder.taskDescription;</span><br><span class="line">    <span class="keyword">final</span> Context context = view.getContext();</span><br><span class="line">    <span class="keyword">final</span> ActivityManager am = (ActivityManager)</span><br><span class="line">            context.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line"></span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (ad.taskId &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// This is an active task; it should just go to the foreground.</span></span><br><span class="line">        am.moveTaskToFront(ad.taskId, ActivityManager.MOVE_TASK_WITH_HOME);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Intent intent = ad.intent;</span><br><span class="line">        intent.addFlags(Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY</span><br><span class="line">                | Intent.FLAG_ACTIVITY_TASK_ON_HOME</span><br><span class="line">                | Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            context.startActivityAsUser(intent,</span><br><span class="line">                    <span class="keyword">new</span> UserHandle(UserHandle.USER_CURRENT));</span><br><span class="line"></span><br><span class="line"> .</span><br><span class="line"> .</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="TaskDescription"><a href="#TaskDescription" class="headerlink" title="TaskDescription"></a>TaskDescription</h4><p>从系统获取的Recents App的对象实体类。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TaskDescription</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ResolveInfo resolveInfo;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> taskId; <span class="comment">// application task id for curating apps</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> persistentTaskId; <span class="comment">// persistent id</span></span><br><span class="line">    <span class="keyword">final</span> Intent intent; <span class="comment">// launch intent for application</span></span><br><span class="line">    <span class="keyword">final</span> String packageName; <span class="comment">// used to override animations (see onClick())</span></span><br><span class="line">    <span class="keyword">final</span> CharSequence description;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Drawable mThumbnail; <span class="comment">// generated by Activity.onCreateThumbnail()</span></span><br><span class="line">    <span class="keyword">private</span> Drawable mIcon; <span class="comment">// application package icon</span></span><br><span class="line">    <span class="keyword">private</span> CharSequence mLabel; <span class="comment">// application package label</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mLoaded;</span><br><span class="line">    </span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="RecentTasksLoader"><a href="#RecentTasksLoader" class="headerlink" title="RecentTasksLoader"></a>RecentTasksLoader</h4><p>RecentTasksLoader做为Recents的重要实现部分，放在最后介绍。RecentTasksLoader主要实现了从系统获取当前显示运行的App的详细信息，缩略图，process Id，icon以及获取最近打开过的应用列表的详细信息。还实现了将获取的数据写入TaskDescription ArrayList中，以供RecentsPanelView获取显示。</p>
<p>获取当前运行App的信息：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> TaskDescription <span class="title">loadFirstTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">final</span> ActivityManager am = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">final</span> List&lt;ActivityManager.RecentTaskInfo&gt; recentTasks = am.getRecentTasksForUser(</span><br><span class="line">             <span class="number">1</span>, ActivityManager.RECENT_IGNORE_UNAVAILABLE, UserHandle.CURRENT.getIdentifier());</span><br><span class="line">     TaskDescription item = <span class="keyword">null</span>;</span><br><span class="line">     <span class="keyword">if</span> (recentTasks.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">         ActivityManager.RecentTaskInfo recentInfo = recentTasks.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">         Intent intent = <span class="keyword">new</span> Intent(recentInfo.baseIntent);</span><br><span class="line">         <span class="keyword">if</span> (recentInfo.origActivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">             intent.setComponent(recentInfo.origActivity);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Don't load ourselves</span></span><br><span class="line">         <span class="keyword">if</span> (intent.getComponent().getPackageName().equals(mContext.getPackageName())) &#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (intent.getComponent().getPackageName().equals(CARHOME)) &#123;</span><br><span class="line">	mCarhomeFirstTask = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	mCarhomeFirstTask = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">         item = createTaskDescription(recentInfo.id,</span><br><span class="line">                 recentInfo.persistentId, recentInfo.baseIntent,</span><br><span class="line">                 recentInfo.origActivity, recentInfo.description);</span><br><span class="line">         <span class="keyword">if</span> (item != <span class="keyword">null</span>) &#123;</span><br><span class="line">             loadThumbnailAndIcon(item);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> item;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>获取最近任务列表：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadTasksInBackground</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> zeroeth)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mState != State.CANCELLED) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mState = State.LOADING;</span><br><span class="line">    mFirstScreenful = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> LinkedBlockingQueue&lt;TaskDescription&gt; tasksWaitingForThumbnails =</span><br><span class="line">            <span class="keyword">new</span> LinkedBlockingQueue&lt;TaskDescription&gt;();</span><br><span class="line">    mTaskLoader = <span class="keyword">new</span> AsyncTask&lt;Void, ArrayList&lt;TaskDescription&gt;, Void&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(ArrayList&lt;TaskDescription&gt;... values)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!isCancelled()) &#123;</span><br><span class="line">                ArrayList&lt;TaskDescription&gt; newTasks = values[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">// do a callback to RecentsPanelView to let it know we have more values</span></span><br><span class="line">                <span class="comment">// how do we let it know we're all done? just always call back twice</span></span><br><span class="line">                <span class="keyword">if</span> (mRecentsPanel != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mRecentsPanel.onTasksLoaded(newTasks, mFirstScreenful);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (mLoadedTasks == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mLoadedTasks = <span class="keyword">new</span> ArrayList&lt;TaskDescription&gt;();</span><br><span class="line">                &#125;</span><br><span class="line">                mLoadedTasks.addAll(newTasks);</span><br><span class="line">                mFirstScreenful = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> Void <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// We load in two stages: first, we update progress with just the first screenful</span></span><br><span class="line">            <span class="comment">// of items. Then, we update with the rest of the items</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> origPri = Process.getThreadPriority(Process.myTid());</span><br><span class="line">            Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);</span><br><span class="line">            <span class="keyword">final</span> PackageManager pm = mContext.getPackageManager();</span><br><span class="line">            <span class="keyword">final</span> ActivityManager am = (ActivityManager)</span><br><span class="line">            mContext.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> List&lt;ActivityManager.RecentTaskInfo&gt; recentTasks =</span><br><span class="line">                    am.getRecentTasks(MAX_TASKS, ActivityManager.RECENT_IGNORE_UNAVAILABLE);</span><br><span class="line">            <span class="keyword">int</span> numTasks = recentTasks.size();</span><br><span class="line">            ActivityInfo homeInfo = <span class="keyword">new</span> Intent(Intent.ACTION_MAIN)</span><br><span class="line">                    .addCategory(Intent.CATEGORY_HOME).resolveActivityInfo(pm, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Exchange carhome to first task</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = numTasks - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isCancelled())</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                ActivityManager.RecentTaskInfo recentInfo = recentTasks.get(i);</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(recentInfo.baseIntent);</span><br><span class="line">                <span class="keyword">if</span> (recentInfo.origActivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    intent.setComponent(recentInfo.origActivity);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// final int iter = i;</span></span><br><span class="line">                <span class="comment">// exchange carhome to first item</span></span><br><span class="line">                <span class="keyword">if</span> (isCurrentHomeActivity(intent.getComponent(), homeInfo)) &#123;</span><br><span class="line">                    ActivityManager.RecentTaskInfo temp = recentTasks.get(i);</span><br><span class="line">                    recentTasks.set(i, recentTasks.get(i - <span class="number">1</span>));</span><br><span class="line">                    recentTasks.set((i - <span class="number">1</span>), temp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> firstScreenful = <span class="keyword">true</span>;</span><br><span class="line">            ArrayList&lt;TaskDescription&gt; tasks = <span class="keyword">new</span> ArrayList&lt;TaskDescription&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// skip the first task - assume it's either the home screen or the current activity.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = first, index = <span class="number">0</span>; i &lt; numTasks &amp;&amp; (index &lt; MAX_TASKS); ++i) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isCancelled()) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">final</span> ActivityManager.RecentTaskInfo recentInfo = recentTasks.get(i);</span><br><span class="line"></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(recentInfo.baseIntent);</span><br><span class="line">                <span class="keyword">if</span> (recentInfo.origActivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    intent.setComponent(recentInfo.origActivity);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Don't load the current home activity.</span></span><br><span class="line">                <span class="comment">// if (isCurrentHomeActivity(intent.getComponent(), homeInfo)) &#123;</span></span><br><span class="line">                <span class="comment">//     continue;</span></span><br><span class="line">                <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// Don't load ourselves</span></span><br><span class="line">                <span class="keyword">if</span> (intent.getComponent().getPackageName().equals(mContext.getPackageName())) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                TaskDescription item = createTaskDescription(recentInfo.id,</span><br><span class="line">                        recentInfo.persistentId, recentInfo.baseIntent,</span><br><span class="line">                        recentInfo.origActivity, recentInfo.description);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (item != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            tasksWaitingForThumbnails.put(item);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    tasks.add(item);</span><br><span class="line">                    <span class="keyword">if</span> (firstScreenful &amp;&amp; tasks.size() == mNumTasksInFirstScreenful) &#123;</span><br><span class="line">                        publishProgress(tasks);</span><br><span class="line">                        tasks = <span class="keyword">new</span> ArrayList&lt;TaskDescription&gt;();</span><br><span class="line">                        firstScreenful = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="comment">//break;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    ++index;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            .</span><br><span class="line">            .</span><br><span class="line">    &#125;;</span><br><span class="line">    mTaskLoader.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);</span><br><span class="line">    loadThumbnailsAndIconsInBackground(tasksWaitingForThumbnails);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>写入数据：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create an TaskDescription, returning null if the title or icon is null</span></span><br><span class="line"><span class="function">TaskDescription <span class="title">createTaskDescription</span><span class="params">(<span class="keyword">int</span> taskId, <span class="keyword">int</span> persistentTaskId, Intent baseIntent,</span><br><span class="line">        ComponentName origActivity, CharSequence description)</span> </span>&#123;</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(baseIntent);</span><br><span class="line">    <span class="keyword">if</span> (origActivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">        intent.setComponent(origActivity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> PackageManager pm = mContext.getPackageManager();</span><br><span class="line">    intent.setFlags((intent.getFlags()&amp;~Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED)</span><br><span class="line">            | Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">    <span class="keyword">final</span> ResolveInfo resolveInfo = pm.resolveActivity(intent, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (resolveInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">final</span> ActivityInfo info = resolveInfo.activityInfo;</span><br><span class="line">        <span class="keyword">final</span> String title = info.loadLabel(pm).toString();</span><br><span class="line"></span><br><span class="line">            TaskDescription item = <span class="keyword">new</span> TaskDescription(taskId,</span><br><span class="line">                    persistentTaskId, resolveInfo, baseIntent, info.packageName,</span><br><span class="line">                    description);</span><br><span class="line">            item.setLabel(title);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">"SKIPPING item "</span> + persistentTaskId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>需求：双击启动进入最近任务列表</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[System statusbar]]></title>
    <link href="flintli.xyz/2016/07/22/SystemUI-statusbar/"/>
    <id>flintli.xyz/2016/07/22/SystemUI-statusbar/</id>
    <published>2016-07-22T02:27:24.000Z</published>
    <updated>2016-07-22T02:35:51.000Z</updated>
    <content type="html"><![CDATA[<p>SystemUI statusbar</p>
<a id="more"></a>
<h2 id="u5B9E_u73B0_u601D_u8DEF"><a href="#u5B9E_u73B0_u601D_u8DEF" class="headerlink" title="实现思路"></a>实现思路</h2><p>systemui的statusbar主要实现思路是：调整系统窗口策略，将一个View addView到WindowManager中去左右显示。</p>
<h3 id="statusbar_u5B9E_u73B0"><a href="#statusbar_u5B9E_u73B0" class="headerlink" title="statusbar实现"></a>statusbar实现</h3><p>文件路径：<br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/SystemBars.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java</code><br><code>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CarStatusBar.java</code></p>
<p><code>BaseStatusBar</code>中获取WindowManager对象以及初始化，获取IStatusBarService对象，注册statusbar。实现代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mWindowManager = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">        mWindowManagerService = WindowManagerGlobal.getWindowManagerService();</span><br><span class="line">        mDisplay = mWindowManager.getDefaultDisplay();</span><br><span class="line"></span><br><span class="line">        mBarService = IStatusBarService.Stub.asInterface(</span><br><span class="line">                ServiceManager.getService(Context.STATUS_BAR_SERVICE));</span><br><span class="line"></span><br><span class="line">        mRecents = getComponent(RecentsComponent.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Connect in to the status bar manager service</span></span><br><span class="line">        StatusBarIconList iconList = <span class="keyword">new</span> StatusBarIconList();</span><br><span class="line">        ArrayList&lt;IBinder&gt; notificationKeys = <span class="keyword">new</span> ArrayList&lt;IBinder&gt;();</span><br><span class="line">        ArrayList&lt;StatusBarNotification&gt; notifications = <span class="keyword">new</span> ArrayList&lt;StatusBarNotification&gt;();</span><br><span class="line">        mCommandQueue = <span class="keyword">new</span> CommandQueue(<span class="keyword">this</span>, iconList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] switches = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">7</span>];</span><br><span class="line">        ArrayList&lt;IBinder&gt; binders = <span class="keyword">new</span> ArrayList&lt;IBinder&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mBarService.registerStatusBar(mCommandQueue, iconList, notificationKeys, notifications,</span><br><span class="line">                    switches, binders);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</span><br><span class="line">            <span class="comment">// If the system process isn't there we're doomed anyway.</span></span><br><span class="line">        &#125;</span><br><span class="line">        createAndAddWindows();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>然后创建以及添加systemui Window，<code>createAndAddWindows()</code>，在<code>CarStatusBar.java</code>中实现：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createAndAddWindows</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    addStatusBarWindow();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>addStatusBarWindow：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addStatusBarWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Put up the view</span></span><br><span class="line">        <span class="keyword">final</span> Resources res = mContext.getResources();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> width =  <span class="number">240</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now that the status bar window encompasses the sliding panel and its</span></span><br><span class="line">        <span class="comment">// translucent backdrop, the entire thing is made TRANSLUCENT and is</span></span><br><span class="line">        <span class="comment">// hardware-accelerated.</span></span><br><span class="line">        <span class="keyword">final</span> WindowManager.LayoutParams lp = <span class="keyword">new</span> WindowManager.LayoutParams(</span><br><span class="line">                width,</span><br><span class="line">                ViewGroup.LayoutParams.MATCH_PARENT,</span><br><span class="line">                WindowManager.LayoutParams.TYPE_STATUS_BAR,</span><br><span class="line">                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE</span><br><span class="line">                    | WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING</span><br><span class="line">                    | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH</span><br><span class="line">                    | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH,</span><br><span class="line">                PixelFormat.TRANSLUCENT);</span><br><span class="line"></span><br><span class="line">        lp.flags |= WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;</span><br><span class="line"></span><br><span class="line">        lp.gravity = getStatusBarGravity();</span><br><span class="line">        lp.setTitle(<span class="string">"StatusBar"</span>);</span><br><span class="line">        lp.packageName = mContext.getPackageName();</span><br><span class="line"></span><br><span class="line">        makeStatusBarView();</span><br><span class="line">        mWindowManager.addView(mCarstatusbarView, lp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>getStatusBarGravity定义了view在父布局中的显示位置。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getStatusBarGravity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//return Gravity.TOP | Gravity.FILL_HORIZONTAL;</span></span><br><span class="line">        <span class="keyword">return</span> Gravity.LEFT | Gravity.FILL_VERTICAL;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>makeStatusBarView创建systemui需要显示的View布局：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">makeStatusBarView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">final</span> Context context = mContext;</span><br><span class="line"></span><br><span class="line">	<span class="comment">///todo xos</span></span><br><span class="line">	mCarstatusbarView = (LinearLayout) View.inflate(context,</span><br><span class="line">                R.layout.status_bar, <span class="keyword">null</span>);</span><br><span class="line">	mCarstatusbarView.setVisibility(View.GONE);</span><br><span class="line"></span><br><span class="line">	first_view = (LinearLayout) mCarstatusbarView.findViewById(R.id.left_first_view);</span><br><span class="line">	second_view = (LinearLayout) mCarstatusbarView.findViewById(R.id.left_second_view);</span><br><span class="line">	third_view = (LinearLayout) mCarstatusbarView.findViewById(R.id.left_third_view);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/// template</span></span><br><span class="line">	navi_view = (LinearLayout) View.inflate(context,</span><br><span class="line">                R.layout.status_bar_left_navi, <span class="keyword">null</span>);</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	<span class="comment">// 第一个显示区域，导航</span></span><br><span class="line">	first_view.removeAllViews();</span><br><span class="line">   first_view.addView(navi_view);</span><br><span class="line">   .</span><br><span class="line">   .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="u7CFB_u7EDF_u4FEE_u6539_u90E8_u5206"><a href="#u7CFB_u7EDF_u4FEE_u6539_u90E8_u5206" class="headerlink" title="系统修改部分"></a>系统修改部分</h3><p>文件路径：<br><code>frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java</code></p>
<p>同时，还需要修改系统中原有的状态栏、app上下排列显示窗口策略为<strong>左右排列策略</strong>。如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// row 241</span></span><br><span class="line"><span class="keyword">int</span> mStatusBarwidth;</span><br><span class="line"></span><br><span class="line"><span class="comment">//row 1073</span></span><br><span class="line">mStatusBarWidth = <span class="number">240</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//row 1573</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getConfigDisplayWidth</span><span class="params">(<span class="keyword">int</span> fullWidth, <span class="keyword">int</span> fullHeight, <span class="keyword">int</span> rotation)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//return getNonDecorDisplayWidth(fullWidth, fullHeight, rotation);</span></span><br><span class="line">    <span class="comment">/// TODO YOUR COMMENT.</span></span><br><span class="line">    <span class="keyword">return</span> getNonDecorDisplayWidth(fullWidth, fullHeight, rotation) - mStatusBarWidth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getConfigDisplayHeight</span><span class="params">(<span class="keyword">int</span> fullWidth, <span class="keyword">int</span> fullHeight, <span class="keyword">int</span> rotation)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// There is a separate status bar at the top of the display.  We don't count that as part</span></span><br><span class="line">    <span class="comment">// of the fixed decor, since it can hide; however, for purposes of configurations,</span></span><br><span class="line">    <span class="comment">// we do want to exclude it since applications can't generally use that part</span></span><br><span class="line">    <span class="comment">// of the screen.</span></span><br><span class="line">    <span class="comment">//return getNonDecorDisplayHeight(fullWidth, fullHeight, rotation) - mStatusBarHeight;</span></span><br><span class="line">    <span class="comment">/// TODO YOUR COMMENT.</span></span><br><span class="line">    <span class="keyword">return</span> getNonDecorDisplayHeight(fullWidth, fullHeight, rotation);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//row 2870</span></span><br><span class="line"><span class="comment">//mStableTop = mUnrestrictedScreenTop + mStatusBarHeight;</span></span><br><span class="line"><span class="comment">/// TODO YOUR COMMENT.</span></span><br><span class="line">mStableLeft = mUnrestrictedScreenLeft + mStatusBarWidth;</span><br><span class="line"></span><br><span class="line"><span class="comment">//row 2884</span></span><br><span class="line"><span class="comment">//mDockTop = mUnrestrictedScreenTop + mStatusBarHeight;</span></span><br><span class="line"><span class="comment">/// TODO YOUR COMMENT.</span></span><br><span class="line">mDockLeft = mUnrestrictedScreenLeft + mStatusBarWidth;</span><br><span class="line"></span><br><span class="line"><span class="comment">//row 2906</span></span><br><span class="line"><span class="comment">// mSystemTop = mUnrestrictedScreenTop + mStatusBarHeight;</span></span><br><span class="line"><span class="comment">/// TODO YOUR COMMENT.</span></span><br><span class="line">mSystemLeft = mUnrestrictedScreenLeft + mStatusBarWidth;</span><br></pre></td></tr></table></figure>
<p>row代表该文件中具体行数。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>SystemUI statusbar</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 4.4禁止系统无反应弹窗]]></title>
    <link href="flintli.xyz/2016/07/22/Android-4-4%E7%A6%81%E6%AD%A2%E7%B3%BB%E7%BB%9F%E6%97%A0%E5%8F%8D%E5%BA%94%E5%BC%B9%E7%AA%97/"/>
    <id>flintli.xyz/2016/07/22/Android-4-4禁止系统无反应弹窗/</id>
    <published>2016-07-22T02:26:31.000Z</published>
    <updated>2016-07-22T02:39:03.000Z</updated>
    <content type="html"><![CDATA[<p>Android4.4系统无反应弹窗目前就出现了两种。第一是应用程序强制退出，第二是ANR弹窗。</p>
<a id="more"></a>
<h3 id="u6982_u8BBA"><a href="#u6982_u8BBA" class="headerlink" title="概论"></a>概论</h3><p>现需要将弹窗去掉，采用直接强制退出应用程序的方式。</p>
<p>系统弹窗处理代码位置：<br><code>/frameworks/base/services/java/com/android/server/am/ActivityManagerService.java</code></p>
<h3 id="u5E94_u7528_u7A0B_u5E8F_u5F3A_u5236_u9000_u51FA"><a href="#u5E94_u7528_u7A0B_u5E8F_u5F3A_u5236_u9000_u51FA" class="headerlink" title="应用程序强制退出"></a>应用程序强制退出</h3><p>弹出对话框的处理代码：    </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!mSleeping &amp;&amp; !mShuttingDown) &#123;		</span><br><span class="line">	Dialog d = <span class="keyword">new</span> AppErrorDialog(mContext, </span><br><span class="line">			ActivityManagerService.<span class="keyword">this</span>, res, proc);</span><br><span class="line">     d.show();</span><br><span class="line">     proc.crashDialog = d;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="comment">// The device is asleep, so just pretend that the user</span></span><br><span class="line">	<span class="comment">// saw a crash dialog and hit "force quit".</span></span><br><span class="line">	<span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line">		res.set(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现需要针对以上代码进行过程简化处理，不再弹出对话框，直接退出程序。</p>
<p>修改后：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (res != <span class="keyword">null</span>) &#123;</span><br><span class="line"> 	res.set(<span class="number">0</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="ANR_u5F39_u7A97"><a href="#ANR_u5F39_u7A97" class="headerlink" title="ANR弹窗"></a>ANR弹窗</h3><p>弹出对话框的处理代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (mShowDialogs) &#123;</span><br><span class="line">	Dialog d = <span class="keyword">new</span> AppNotRespondingDialog(ActivityManagerService.<span class="keyword">this</span>,</span><br><span class="line">		mContext, proc, (ActivityRecord)data.get(<span class="string">"activity"</span>),</span><br><span class="line">		msg.arg1 != <span class="number">0</span>);</span><br><span class="line">	d.show();</span><br><span class="line">	proc.anrDialog = d;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="comment">// Just kill the app if there is no dialog to be shown.</span></span><br><span class="line">	killAppAtUsersRequest(proc, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>处理方案，只kill掉app，不弹窗。<br>修改后：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killAppAtUsersRequest(proc, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>
<p>只需在相应的位置将修改后的代码替换原有代码即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android4.4系统无反应弹窗目前就出现了两种。第一是应用程序强制退出，第二是ANR弹窗。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android add framework res]]></title>
    <link href="flintli.xyz/2016/07/22/Android-add-framework-res/"/>
    <id>flintli.xyz/2016/07/22/Android-add-framework-res/</id>
    <published>2016-07-22T02:25:41.000Z</published>
    <updated>2016-07-22T02:38:15.000Z</updated>
    <content type="html"><![CDATA[<p>为Android系统添加一个新的资源包</p>
<a id="more"></a>
<h3 id="u6982_u8FF0"><a href="#u6982_u8FF0" class="headerlink" title="概述"></a>概述</h3><p>传统的Android系统只有一个framework-res.apk资源包，第三方厂商在进行rom定制时会直接修改framework res资源，达到适配目的。但是这种方式跟原生资源的耦合度过高，在系统迁移或者framework ui移植时需要进行人工merge，工作量巨大。通过为Android添加一个新的独立的资源包，可以将厂商定制资源独立出来，可移植、可维护性非常好。</p>
<h3 id="u5B9E_u73B0"><a href="#u5B9E_u73B0" class="headerlink" title="实现"></a>实现</h3><p>具体做法可以分为以下几个步骤：</p>
<p>1）修改<code>build/core/clear_var.mk</code>，添加一项：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_USE_XOS_FRAMEWORK_RES:= true</span><br></pre></td></tr></table></figure>
<p>2）修改<code>build/core/package.mk</code></p>
<p>以下脚本可以加在<code>$(R_file_stamp): $(framework_res_package_export_deps)</code> 之前，然后修改<code>$(R_file_stamp): $(framework_res_package_export_deps)</code> 和<code>$(LOCAL_INTERMEDIATE_TARGETS): \</code><br>   <code>PRIVATE_AAPT_INCLUDES := $(framework_res_package_export)</code></p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ifeq ($(LOCAL_USE_XOS_FRAMEWORK_RES),true)</span><br><span class="line">xos_framework_res_package_export := \</span><br><span class="line">        $(call intermediates-dir-for,APPS,xos-framework-res,,COMMON)/package-export.apk</span><br><span class="line">xos_framework_res_package_export_deps := \</span><br><span class="line">        $(dir $(xos_framework_res_package_export))src/R.stamp</span><br><span class="line">else</span><br><span class="line">xos_framework_res_package_export :=</span><br><span class="line">xos_framework_res_package_export_deps :=</span><br><span class="line">endif <span class="comment"># LOCAL_USE_XOS_FRAMEWORK_RES</span></span><br></pre></td></tr></table></figure>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(R_file_stamp): $(framework_res_package_export_deps) $(xos_framework_res_package_export_deps)</span><br><span class="line">$(LOCAL_INTERMEDIATE_TARGETS): \</span><br><span class="line">    PRIVATE_AAPT_INCLUDES := $(framework_res_package_export) \</span><br><span class="line">    	$(xos_framework_res_package_export)</span><br><span class="line">endif <span class="comment"># LOCAL_NO_STANDARD_LIBRARIES</span></span><br></pre></td></tr></table></figure>
<p>3）修改<code>build/target/product/core.mk</code></p>
<p>在<code>PRODUCT_PACKAGES</code>增加<code>xos-framework-res</code></p>
<p>4）添加一个新的资源包项目，这里在framework/base/core/res同级目录下建立一个新的文件夹xos_res用来存放我们的资源。把res目录下的AndroidManifest.xml和Android.mk拷贝过来，进行修改。 </p>
<p>记得设置 <code>LOCAL_USE_MY_FRAMEWORK_RES</code>为false。</p>
<p>Android.mk</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_PATH:= <span class="variable">$(call my-dir)</span></span><br><span class="line">include $(CLEAR_VARS)</span><br><span class="line"></span><br><span class="line">LOCAL_MODULE_TAGS := optional</span><br><span class="line"></span><br><span class="line">LOCAL_PACKAGE_NAME := xos-framework-res</span><br><span class="line">LOCAL_CERTIFICATE := platform</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set LOCAL_USE_XOS_FRAMEWORK_RES as false</span></span><br><span class="line">LOCAL_USE_XOS_FRAMEWORK_RES := false</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tell aapt to create "extending (non-application)" resource IDs,</span></span><br><span class="line"><span class="comment"># since these resources will be used by many apps.</span></span><br><span class="line">LOCAL_AAPT_FLAGS := -x</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install this alongside the libraries.</span></span><br><span class="line">LOCAL_MODULE_PATH := <span class="variable">$(TARGET_OUT_JAVA_LIBRARIES)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create package-export.apk, which other packages can use to get</span></span><br><span class="line"><span class="comment"># PRODUCT-agnostic resource data like IDs and type definitions.</span></span><br><span class="line">LOCAL_EXPORT_PACKAGE_RESOURCES := true</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include resources generated by system RenderScript files.</span></span><br><span class="line">framework_GENERATED_SOURCE_DIR := <span class="variable">$(call intermediates-dir-for,JAVA_LIBRARIES,framework,,COMMON)</span>/src</span><br><span class="line">framework_RenderScript_STAMP_FILE := <span class="variable">$(framework_GENERATED_SOURCE_DIR)</span>/RenderScript.stamp</span><br><span class="line"><span class="comment">#LOCAL_RESOURCE_DIR := $(framework_GENERATED_SOURCE_DIR)/renderscript/res $(LOCAL_PATH)/res</span></span><br><span class="line"></span><br><span class="line">include $(BUILD_PACKAGE)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure the system .rs files get compiled before building the package-export.apk.</span></span><br><span class="line"><span class="comment">#$(resource_export_package): $(framework_RenderScript_STAMP_FILE)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># define a global intermediate target that other module may depend on.</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: xos-framework-res-package-target</span></span><br><span class="line">xos-framework-res-package-target: $(LOCAL_BUILT_MODULE)</span><br></pre></td></tr></table></figure>
<p>AndroidManifest.xml</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    package="systems.xos.car.xsdk" </span><br><span class="line">    coreApp="true" </span><br><span class="line">    android:sharedUserId="android.uid.system"</span><br><span class="line">    android:sharedUserLabel="@null"&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application android:process="system"</span><br><span class="line">                 android:persistent="true"</span><br><span class="line">                 android:hasCode="false"</span><br><span class="line">                 android:label="@null"</span><br><span class="line">                 android:allowClearUserData="false"</span><br><span class="line">                 android:killAfterRestore="false"</span><br><span class="line">                 android:icon="@null"&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>
<p>资源的放置跟res下的类似，记得values目录下创建public.xml，public.xml对id的类型区分比较严格，attr必须是0x0x010000开头，drawable必须是0x0x020000开头，其他类型好像就没有限制，直接依次0x0x030000、0x0x040000开始即可。否则，编译过程中会出现segmentation fault错误。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line"> &lt;public type="attr" name="cForeground" id="0x03010000" /&gt;</span><br><span class="line"> &lt;public type="drawable" name="ic_filemanager" id="0x03020000" /&gt;</span><br><span class="line"> &lt;public type="style" name="xosTheme" id="0x03030000" /&gt;</span><br><span class="line"> &lt;public type="string" name="xos" id="0x03040000" /&gt;</span><br><span class="line"> &lt;public type="dimen" name="xos_width" id="0x03050000" /&gt;</span><br><span class="line"> &lt;public type="layout" name="xos_text" id="0x03060000" /&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure>
<p>5）以上只是解决了资源的编译环境问题，资源的查找过程也需要进行修改，修改 <code>AssetManager.java</code>，在<code>init()</code>后添加代码<br><code>addAssetPath(&quot;/system/framework/xos-framework-res.apk&quot;);</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AssetManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (DEBUG_REFS) &#123;</span><br><span class="line">                mNumRefs = <span class="number">0</span>;</span><br><span class="line">                incRefsLocked(<span class="keyword">this</span>.hashCode());</span><br><span class="line">            &#125;</span><br><span class="line">            init();</span><br><span class="line">            addAssetPath(<span class="string">"/system/framework/xos-framework-res.apk"</span>);</span><br><span class="line">            <span class="keyword">if</span> (localLOGV) Log.v(TAG, <span class="string">"New asset manager: "</span> + <span class="keyword">this</span>);</span><br><span class="line">            ensureSystemAssets();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>6）最后就是资源应用问题。应用程序在xml文件中引用<code>xos-framework-res.apk</code>中的资源时可以使用与原生资源类似的访问方式，首先声明xos xmlns :</p>
<p><code>xmlns:xos=&quot;http://schemas.android.com/apk/res/systems.xos.car.xsdk&quot;</code><br>然后像@android:drawable @android:dimen这种引用方式改成@xos:drawable @xos:dimen即可。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line">&lt;LinearLayout</span><br><span class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</span><br><span class="line">    xmlns:xos="http://schemas.android.com/apk/res/systems.xos.car.xsdk"</span><br><span class="line">    android:layout_width="fill_parent"</span><br><span class="line">    android:layout_height="wrap_content"</span><br><span class="line">    android:gravity="center"</span><br><span class="line">    android:paddingTop="@xos:dimen/xos_width"</span><br><span class="line">    android:orientation="horizontal" &gt;</span><br><span class="line"></span><br><span class="line">   &lt;ImageView android:id="@+id/file_icon"</span><br><span class="line">            android:layout_width="wrap_content"</span><br><span class="line">            android:layout_height="wrap_content"</span><br><span class="line">            android:layout_gravity="center"</span><br><span class="line">            android:layout_marginBottom="40dp"</span><br><span class="line">            android:src="@xos:drawable/ic_filemanager" /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure>
<h3 id="XSDK__u4F7F_u7528xos-res_u8D44_u6E90_u65B9_u5F0F"><a href="#XSDK__u4F7F_u7528xos-res_u8D44_u6E90_u65B9_u5F0F" class="headerlink" title="XSDK 使用xos-res资源方式"></a>XSDK 使用xos-res资源方式</h3><p>Android.mk中引用资源路径：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">framework_res_source_path := APPS/xos-framework-res_intermediates/src</span><br><span class="line">LOCAL_INTERMEDIATE_SOURCES := \</span><br><span class="line">	<span class="variable">$(framework_res_source_path)</span>/systems/xos/car/xsdk/R.java</span><br></pre></td></tr></table></figure>
<p>实际代码中使用：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> systems.xos.car.xsdk.R;</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">inflater.inflate(R.layout.menu_view, <span class="keyword">this</span>, <span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>
<p>跟在普通的Android项目中使用资源一样调用。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>为Android系统添加一个新的资源包</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Andorid boot animation]]></title>
    <link href="flintli.xyz/2016/07/22/Andorid-boot-animation/"/>
    <id>flintli.xyz/2016/07/22/Andorid-boot-animation/</id>
    <published>2016-07-22T02:25:01.000Z</published>
    <updated>2016-07-22T02:39:39.000Z</updated>
    <content type="html"><![CDATA[<p>开机动画与声音</p>
<a id="more"></a>
<h3 id="u6587_u4EF6_u8DEF_u5F84_uFF1A"><a href="#u6587_u4EF6_u8DEF_u5F84_uFF1A" class="headerlink" title="文件路径："></a>文件路径：</h3><p><code>/frameworks/base/cmds/bootanimation/</code><br>此目录下实现了开机动画以及开机声音的播放。移植并升级了rockchip(Android 4.4)的开机动画部分源码到5.1，对声音播放进行了改进。</p>
<p><code>/system/vendor/xgene/bootanimation/bootanimation.zip</code><br>开机动画包源码存放位置。</p>
<p><code>build/target/product/generic_no_telephony.mk</code><br>将源码bootanimation.zip 复制到系统的makefile路径。</p>
<h3 id="u590D_u5236zip_u5305"><a href="#u590D_u5236zip_u5305" class="headerlink" title="复制zip包"></a>复制zip包</h3><p>需要将zip复制到编译生成的系统目录下，编写好makefile，系统编译的时候自动复制。<br>在<code>generic_no_telephony.mk</code>添加一条：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_COPY_FILES := \</span><br><span class="line">	vendor/xgene/bootanimation/bootanimation.zip:system/media/bootanimation.zip</span><br></pre></td></tr></table></figure>
<h3 id="u5F00_u673A_u52A8_u753B_u5236_u4F5C"><a href="#u5F00_u673A_u52A8_u753B_u5236_u4F5C" class="headerlink" title="开机动画制作"></a>开机动画制作</h3><p>在任何一个ANDROID的手机或其他设备中，都有这个文件：<code>/system/media/bootanimation.zip</code>这个就是ANDROID系统开机动画文件。    </p>
<font color="red"><code>bootanimation.zip</code>的名字不可变动。 </font> 

<p>zip包的文件结构介绍：</p>
<p>|- <strong>ani-intro</strong><br>||- <code>audio.wav</code><br>||- <code>introandloop_00000.png --&gt; introandloop_00060.png</code></p>
<p>|- <strong>ani-loop</strong><br>||- <code>ani_loop_00000.png --&gt; ani_loop_00060.png</code></p>
<p>|- <strong>audio_conf.txt</strong><br>|- <strong>desc.txt</strong></p>
<p><strong>ani-intro</strong>目录下包含了进场动画（逐帧播放）以及声音文件。<br><strong>ani-loop</strong>目录下包含了循环播放的动画。<br><strong>audio_conf.txt</strong>为声音播放mixer配置文件。<br><strong>desc.txt</strong>为动画播放配置文件。</p>
<p><strong>desc.txt</strong>内容如下：</p>
<p><code>864 480 30</code><br><code>p 1 0 ani_intro</code><br><code>p 0 0 ani_loop</code>        </p>
<blockquote>
<p>其中 <strong>864 480</strong> 是指是指前面文件夹里png的分辨率。</p>
<p><strong>30</strong>是指每秒播放帧数（这个收到机器的影响，一般开机CPU满负荷运行，开始的一段时间播放帧数会低于设定帧数，所以前一段的动画的设计需要考虑到这一点）。   </p>
<p><strong>p</strong>是标识符，<strong>1 0</strong>两个数字分别指循环次数和阶段间隔时间，<strong>ani_intro</strong>就是文件夹的名字。</p>
</blockquote>
<h3 id="u5F00_u673A_u58F0_u97F3_u5236_u4F5C"><a href="#u5F00_u673A_u58F0_u97F3_u5236_u4F5C" class="headerlink" title="开机声音制作"></a>开机声音制作</h3><p>升级源码到 5.1 增加的文件：</p>
<blockquote>
<p>AudioPlayer.cpp<br>AudioPlayer.h</p>
</blockquote>
<p>在Android5.1中，mediaplayer中增加了电源的监控，在mediaplayer服务起来的时候需要加载batterystats服务，但是batterystats服务是在ActivityManagerService中起来的，比较晚，所以如果在开机的时候调用mediaplayer播放声音的话，声音会滞后出现，会出现音视频不同步的问题。因此，在Android5.1中谷歌提供了一个直接调用底层播放声音的方法，不走hal层，不走整个audio流程，直接调用底层pcm播放声音，pcm只能解析wav格式音乐，在播放wav格式音乐时需要做混音配置，即配置mixer参数。</p>
<p>由于开机声音需要在进场动画时就播放，所以将<strong>audio.wav</strong>放置在了<strong>ani-intro</strong>目录下，即开机进场动画播放时一起播放开机声音。</p>
<p><strong>audio_conf.txt</strong>文件为mixer参数配置，具体如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">card=0</span><br><span class="line">device=0</span><br><span class="line">period_size=1024</span><br><span class="line">period_count=4</span><br><span class="line">mixer &quot;Right Output Mixer PCM Playback Switch&quot;=0</span><br><span class="line">mixer &quot;Left Output Mixer PCM Playback Switch&quot;=0</span><br><span class="line">mixer &quot;Right Output Mixer Boost Bypass Switch&quot;=0</span><br><span class="line">mixer &quot;Left Output Mixer Boost Bypass Switch&quot;=0</span><br><span class="line">mixer &quot;Right Output Mixer RINPUT3 Switch&quot;=0</span><br><span class="line">mixer &quot;Left Output Mixer LINPUT3 Switch&quot;=0</span><br><span class="line">mixer &quot;Playback Volume&quot;=255 255</span><br><span class="line">mixer &quot;Speaker Playback Volume&quot;=127 127</span><br><span class="line">mixer &quot;DMono Mix&quot;=1</span><br><span class="line">mixer &quot;Headphone Playback Volume&quot;=110 110</span><br><span class="line">mixer &quot;Right Output Mixer PCM Playback Switch&quot;=1</span><br><span class="line">mixer &quot;Left Output Mixer PCM Playback Switch&quot;=1</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>开机动画与声音</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android build commond]]></title>
    <link href="flintli.xyz/2016/07/22/android-build-command/"/>
    <id>flintli.xyz/2016/07/22/android-build-command/</id>
    <published>2016-07-22T02:24:14.000Z</published>
    <updated>2016-07-22T02:37:35.000Z</updated>
    <content type="html"><![CDATA[<p>Android 编译命令</p>
<a id="more"></a>
<p><strong>初始化：</strong><br><code>source build/envsetup.sh</code><br>准备好编译环境后，编译Android源码的第一步是 <code>source build/envsetup.sh</code>，其中source命令就是用于运行shell脚本命令，功能等价于”.”，因此该命令也等价于<code>. build/envsetup.sh</code>。在文件envsetup.sh声明了当前会话终端可用的命令，这里需要注意的是当前会话终端，也就意味着每次新打开一个终端都必须再一次执行这些指令。</p>
<p><strong>代码编译：</strong></p>
<table>
<thead>
<tr>
<th>编译指令</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>m</td>
<td style="text-align:center">在源码树的根目录执行编译</td>
</tr>
<tr>
<td>mm</td>
<td style="text-align:center">编译当前路径下所有模块，但不包含依赖</td>
</tr>
<tr>
<td>mmm [module_path]</td>
<td style="text-align:center">编译指定路径下所有模块，但不包含依赖</td>
</tr>
<tr>
<td>mma</td>
<td style="text-align:center">编译当前路径下所有模块，且包含依赖</td>
</tr>
<tr>
<td>mmma [module_path]</td>
<td style="text-align:center">编译指定路径下所有模块，且包含依赖</td>
</tr>
<tr>
<td>make [module_name]</td>
<td style="text-align:center">无参数，则表示编译整个Android代码</td>
</tr>
</tbody>
</table>
<p><strong>模块的编译指令：</strong></p>
<table>
<thead>
<tr>
<th>模块</th>
<th style="text-align:center">make命令</th>
<th style="text-align:center">mmm命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>init</td>
<td style="text-align:center">make init</td>
<td style="text-align:center">mmm system/core/init</td>
</tr>
<tr>
<td>zygote</td>
<td style="text-align:center">make app_process</td>
<td style="text-align:center">mmm frameworks/base/cmds/app_process</td>
</tr>
<tr>
<td>system_server</td>
<td style="text-align:center">make services</td>
<td style="text-align:center">mmm frameworks/base/services</td>
</tr>
<tr>
<td>java framework</td>
<td style="text-align:center">make framework</td>
<td style="text-align:center">mmm frameworks/base</td>
</tr>
<tr>
<td>framework资源</td>
<td style="text-align:center">make framework-res</td>
<td style="text-align:center">mmm frameworks/base/core/res</td>
</tr>
<tr>
<td>jni framework</td>
<td style="text-align:center">make libandroid_runtime</td>
<td style="text-align:center">mmm frameworks/base/core/jni</td>
</tr>
<tr>
<td>binder</td>
<td style="text-align:center">make libbinder</td>
<td style="text-align:center">mmm frameworks/native/libs/binder</td>
</tr>
</tbody>
</table>
<p><strong>以下列出的编译命令顺序只针对Rockchip提供的aosp。</strong></p>
<p>因为在系统中增加了资源文件，切sdk的编译依赖于资源文件生成包，所以资源编译顺序需要提前。下面列出整个系统编译流程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ . build/envsetup.sh</span><br><span class="line"></span><br><span class="line">$ cd kernel</span><br><span class="line">$ make rkpx2_4.4_dlp_defconfig</span><br><span class="line">$ make kernel.img</span><br><span class="line">$ cd ..</span><br><span class="line"></span><br><span class="line">$ make framework -j$(nproc)</span><br><span class="line">$ make xos-framework-res -j$(nproc)</span><br><span class="line">$ make -j$(nproc)</span><br><span class="line">$ make dist</span><br><span class="line">$ make otapackage -j$(nproc)</span><br><span class="line">$ ./mkimage.sh ota</span><br><span class="line"></span><br><span class="line">$ cd u-boot</span><br><span class="line">$ make distclean</span><br><span class="line">$ make rkpx2</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android 编译命令</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 蓝牙 BLE Central实现]]></title>
    <link href="flintli.xyz/2016/06/27/Android-bluetooth-BLE-central/"/>
    <id>flintli.xyz/2016/06/27/Android-bluetooth-BLE-central/</id>
    <published>2016-06-27T07:34:03.000Z</published>
    <updated>2016-06-27T09:37:06.000Z</updated>
    <content type="html"><![CDATA[<p>Android蓝牙4.0的BLE协议中，有两个角色，一个是中心（<code>Central</code>），一个是周边（<code>Periphery</code>），本篇主要介绍BLE Central的实现过程。</p>
<p><a href="http://flintli.xyz/2016/06/27/Android-bluetooth-BLE-periphery/">Android 蓝牙 BLE Periphery实现</a></p>
<a id="more"></a>
<h2 id="u5B9E_u73B0_u6B65_u9AA4"><a href="#u5B9E_u73B0_u6B65_u9AA4" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>BLE Central的实现跟Periphery基本类似，下面给出从搜索设备到连接设备，到最后的通讯的具体实现代码。</p>
<h3 id="u6743_u9650_u6DFB_u52A0"><a href="#u6743_u9650_u6DFB_u52A0" class="headerlink" title="权限添加"></a>权限添加</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH"</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span>/&gt;</span><br><span class="line">&lt;uses-feature android:name=<span class="string">"android.hardware.bluetooth_le"</span> android:required=<span class="string">"true"</span>/&gt;</span><br></pre></td></tr></table></figure>
<p>如果 android.hardware.bluetooth_le设置为false,可以安装在不支持的设备上使用，只要判断是否支持蓝牙4.0用以下代码就可以了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE)) &#123;</span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">"设备不支持蓝牙4.0"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="u6253_u5F00_u84DD_u7259"><a href="#u6253_u5F00_u84DD_u7259" class="headerlink" title="打开蓝牙"></a>打开蓝牙</h3><p>1、利用系统默认开启蓝牙对话框</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || !mBluetoothAdapter.isEnabled()) &#123;</span><br><span class="line">    Intent enableBtIntent = <span class="keyword">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">    startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、后台打开蓝牙，不做任何提示，这个也可以用来自定义打开蓝牙对话框啦</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mBluetoothAdapter.enable();</span><br></pre></td></tr></table></figure>
<p>3、后台关闭蓝牙</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mBluetoothAdapter.disable();</span><br></pre></td></tr></table></figure>
<h3 id="u641C_u7D22_u8BBE_u5907"><a href="#u641C_u7D22_u8BBE_u5907" class="headerlink" title="搜索设备"></a>搜索设备</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">scanLeDevice</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> enable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (enable) &#123;</span><br><span class="line">            <span class="comment">// Stops scanning after a pre-defined scan period.</span></span><br><span class="line">            mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    mScanning = <span class="keyword">false</span>;</span><br><span class="line">                    mBluetoothAdapter.stopLeScan(mLeScanCallback);</span><br><span class="line">                    invalidateOptionsMenu();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, SCAN_PERIOD);</span><br><span class="line"></span><br><span class="line">            mScanning = <span class="keyword">true</span>;</span><br><span class="line">            mBluetoothAdapter.startLeScan( mLeScanCallback);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mScanning = <span class="keyword">false</span>;</span><br><span class="line">            mBluetoothAdapter.stopLeScan(mLeScanCallback);</span><br><span class="line">        &#125;</span><br><span class="line">        invalidateOptionsMenu();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><code>mLeScanCallback</code>为搜索回调，需自定义实现，搜索到相应的BLE设备之后，执行回调取得设备信息。</p>
<h3 id="u83B7_u53D6_u8BBE_u5907"><a href="#u83B7_u53D6_u8BBE_u5907" class="headerlink" title="获取设备"></a>获取设备</h3><p>注册搜索回调，获取搜索到的设备信息等。Google对<code>BluetoothAdapter.LeScanCallback</code>做出如下解释。<br><code>Callback interface used to deliver LE scan results.</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Device scan callback.</span></span><br><span class="line">    <span class="keyword">private</span> BluetoothAdapter.LeScanCallback mLeScanCallback =</span><br><span class="line">            <span class="keyword">new</span> BluetoothAdapter.LeScanCallback() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLeScan</span><span class="params">(<span class="keyword">final</span> BluetoothDevice device, <span class="keyword">int</span> rssi, <span class="keyword">byte</span>[] scanRecord)</span> </span>&#123;</span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    mLeDeviceListAdapter.addDevice(device);</span><br><span class="line">                    mLeDeviceListAdapter.notifyDataSetChanged();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<h3 id="u8FDE_u63A5_u8BBE_u5907"><a href="#u8FDE_u63A5_u8BBE_u5907" class="headerlink" title="连接设备"></a>连接设备</h3><p>### </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android蓝牙4.0的BLE协议中，有两个角色，一个是中心（<code>Central</code>），一个是周边（<code>Periphery</code>），本篇主要介绍BLE Central的实现过程。</p>
<p><a href="http://flintli.xyz/2016/06/27/Android-bluetooth-BLE-periphery/">Android 蓝牙 BLE Periphery实现</a></p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
      <category term="BLE" scheme="flintli.xyz/tags/BLE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 蓝牙 BLE Periphery实现]]></title>
    <link href="flintli.xyz/2016/06/27/Android-bluetooth-BLE-periphery/"/>
    <id>flintli.xyz/2016/06/27/Android-bluetooth-BLE-periphery/</id>
    <published>2016-06-27T07:34:03.000Z</published>
    <updated>2016-06-27T07:39:56.000Z</updated>
    <content type="html"><![CDATA[<p>Android蓝牙4.0的BLE协议中，有两个角色，一个是中心（<code>Central</code>），一个是周边（<code>Periphery</code>）。本篇主要介绍BLE periphery的实现过程，BLE的介绍以及central的实现另外的篇幅再介绍。</p>
<p><a href="http://flintli.xyz/2016/06/27/Android-bluetooth-BLE-central/">Android 蓝牙 BLE Central实现</a></p>
<a id="more"></a>
<h2 id="u7B80_u8FF0"><a href="#u7B80_u8FF0" class="headerlink" title="简述"></a>简述</h2><p>BLE periphery与central是通过建立GATT连接，实现<code>GATT server</code>和<code>GATT client</code>去传输数据。一个central可以同时连接多个periphery，但是一个periphery某一个时间点只能连接一个central。</p>
<blockquote>
<p>GATT Client —— 从GATT服务器读/写数据的设备。<br>GATT Server —— 包含客户端需要读/写的数据的设备。</p>
</blockquote>
<h2 id="u5B9E_u73B0"><a href="#u5B9E_u73B0" class="headerlink" title="实现"></a>实现</h2><p>了解了一些基本的概念之后，进入periphery的实现介绍。</p>
<h3 id="u6743_u9650_u6DFB_u52A0"><a href="#u6743_u9650_u6DFB_u52A0" class="headerlink" title="权限添加"></a>权限添加</h3><p>对蓝牙进行相关操作，都需要从系统获取相应的权限，BLE periphery需要实现广播BLE设备信号，须在<code>AndroidManifest.xml</code>添加如下权限：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span><br></pre></td></tr></table></figure>
<h3 id="u5B9E_u73B0_u8FC7_u7A0B"><a href="#u5B9E_u73B0_u8FC7_u7A0B" class="headerlink" title="实现过程"></a>实现过程</h3><p><code>BluetoothGattServer</code>作为周边来提供数据；<br><code>BluetoothGattServerCallback</code>返回周边的状态。</p>
<h4 id="1-_u83B7_u53D6_u84DD_u7259Adapter"><a href="#1-_u83B7_u53D6_u84DD_u7259Adapter" class="headerlink" title="1.获取蓝牙Adapter"></a>1.获取蓝牙Adapter</h4><p>首先要获取系统蓝牙服务，判断设备是否支持BLE 广播。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">BluetoothManager mManager;</span><br><span class="line">BluetoothAdapter mAdapter;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">init</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == mManager)</span><br><span class="line">            mManager = (BluetoothManager)context.getSystemService(Context.BLUETOOTH_SERVICE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == mManager)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">false</span> == context.getPackageManager().</span><br><span class="line">                hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE))</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == mAdapter)</span><br><span class="line">            mAdapter = mManager.getAdapter();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">false</span> == mAdapter.isMultipleAdvertisementSupported())</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        mContext = context;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(-<span class="number">1</span> == sts)</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"this device is without bluetooth module"</span>,</span><br><span class="line">                        Toast.LENGTH_LONG).show();</span><br><span class="line">    <span class="keyword">if</span>(-<span class="number">2</span> == sts)</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"this device do not support Bluetooth low energy"</span>,</span><br><span class="line">                        Toast.LENGTH_LONG).show();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(-<span class="number">3</span> == sts)</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"this device do not support to be a BLE peripheral, "</span> +</span><br><span class="line">                                <span class="string">"please buy nexus 6 or 9 then try again"</span>,</span><br><span class="line">                        Toast.LENGTH_LONG).show();</span><br></pre></td></tr></table></figure>
<h4 id="2-new__u4E00_u4E2A_u7279_u5F81"><a href="#2-new__u4E00_u4E2A_u7279_u5F81" class="headerlink" title="2.new 一个特征"></a>2.new 一个特征</h4><p>定义一个Characteristic UUID，并new一个特征。    </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> String SOFTWARE_REVISION_STRING = <span class="string">"00002A28-0000-1000-8000-00805f9b34fb"</span>;</span><br><span class="line">BluetoothGattCharacteristic softwareVerCharacteristic = <span class="keyword">new</span> BluetoothGattCharacteristic(</span><br><span class="line">                UUID.fromString(SOFTWARE_REVISION_STRING),</span><br><span class="line">                BluetoothGattCharacteristic.PROPERTY_READ,</span><br><span class="line">                BluetoothGattCharacteristic.PERMISSION_READ</span><br><span class="line">        );</span><br></pre></td></tr></table></figure>
<h4 id="3-new__u4E00_u4E2A_u670D_u52A1"><a href="#3-new__u4E00_u4E2A_u670D_u52A1" class="headerlink" title="3.new 一个服务"></a>3.new 一个服务</h4><p>定义一个Service UUID，并new一个服务。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> String SERVICE_DEVICE_INFORMATION = <span class="string">"0000180a-0000-1000-8000-00805f9b34fb"</span>;</span><br><span class="line">BluetoothGattService deviceInfoService = <span class="keyword">new</span> BluetoothGattService(</span><br><span class="line">                UUID.fromString(SERVICE_DEVICE_INFORMATION),</span><br><span class="line">                BluetoothGattService.SERVICE_TYPE_PRIMARY);</span><br></pre></td></tr></table></figure>
<h4 id="4-_u7ED9_u7279_u5F81_u8BBE_u4E00_u4E2A_u503C"><a href="#4-_u7ED9_u7279_u5F81_u8BBE_u4E00_u4E2A_u503C" class="headerlink" title="4.给特征设一个值"></a>4.给特征设一个值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">softwareVerCharacteristic.setValue(<span class="keyword">new</span> String(<span class="string">"0.0.1"</span>).getBytes());</span><br></pre></td></tr></table></figure>
<h4 id="5-_u628A_u7279_u5F81_u6DFB_u52A0_u5230_u670D_u52A1"><a href="#5-_u628A_u7279_u5F81_u6DFB_u52A0_u5230_u670D_u52A1" class="headerlink" title="5.把特征添加到服务"></a>5.把特征添加到服务</h4><p>将上面定义好的特征添加到服务中。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deviceInfoService.addCharacteristic(softwareVerCharacteristic);</span><br></pre></td></tr></table></figure>
<h4 id="6-_u914D_u7F6E_u5E7F_u64AD"><a href="#6-_u914D_u7F6E_u5E7F_u64AD" class="headerlink" title="6.配置广播"></a>6.配置广播</h4><p>定义广播名称以及使之可被搜索到等等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">AdvertiseSettings.Builder settingBuilder;</span><br><span class="line">settingBuilder = <span class="keyword">new</span> AdvertiseSettings.Builder();</span><br><span class="line">        settingBuilder.setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_LATENCY);</span><br><span class="line">settingBuilder.setConnectable(<span class="keyword">true</span>);</span><br><span class="line">        settingBuilder.setTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_HIGH);</span><br><span class="line"></span><br><span class="line">AdvertiseData.Builder advBuilder;</span><br><span class="line"></span><br><span class="line">advBuilder = <span class="keyword">new</span> AdvertiseData.Builder();</span><br><span class="line"></span><br><span class="line">mAdapter.setName(<span class="string">"Peripheral"</span>); <span class="comment">//8 characters works, 9+ fails</span></span><br><span class="line">advBuilder.setIncludeDeviceName(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>
<h4 id="7-_u6253_u5F00_u5468_u8FB9_u53CA_u76D1_u542C_u56DE_u8C03"><a href="#7-_u6253_u5F00_u5468_u8FB9_u53CA_u76D1_u542C_u56DE_u8C03" class="headerlink" title="7.打开周边及监听回调"></a>7.打开周边及监听回调</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">BluetoothGattServer  mGattServer;</span><br><span class="line">mGattServer = mManager.openGattServer(mContext, mGattServerCallback);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> BluetoothGattServerCallback mGattServerCallback</span><br><span class="line">            = <span class="keyword">new</span> BluetoothGattServerCallback()&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnectionStateChange</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> status, <span class="keyword">int</span> newState)</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt server connection state changed, new state "</span>);</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, Integer.toString(newState));</span><br><span class="line">            <span class="keyword">super</span>.onConnectionStateChange(device, status, newState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceAdded</span><span class="params">(<span class="keyword">int</span> status, BluetoothGattService service)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt server service was added."</span>);</span><br><span class="line">            <span class="keyword">super</span>.onServiceAdded(status, service);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicReadRequest</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> requestId, <span class="keyword">int</span> offset, BluetoothGattCharacteristic characteristic)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt characteristic was read."</span>);</span><br><span class="line">            <span class="keyword">super</span>.onCharacteristicReadRequest(device, requestId, offset, characteristic);</span><br><span class="line">            mGattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, offset,</span><br><span class="line">                    characteristic.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicWriteRequest</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> requestId, BluetoothGattCharacteristic characteristic, <span class="keyword">boolean</span> preparedWrite, <span class="keyword">boolean</span> responseNeeded, <span class="keyword">int</span> offset, <span class="keyword">byte</span>[] value)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"We have received a write request for one of our hosted characteristics"</span>);</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"data = "</span>+ value.toString());</span><br><span class="line">            <span class="keyword">super</span>.onCharacteristicWriteRequest(device, requestId, characteristic, preparedWrite, responseNeeded, offset, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNotificationSent</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> status)</span></span><br><span class="line">        </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"onNotificationSent"</span>);</span><br><span class="line">            <span class="keyword">super</span>.onNotificationSent(device, status);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDescriptorReadRequest</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> requestId, <span class="keyword">int</span> offset, BluetoothGattDescriptor descriptor)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt server descriptor was read."</span>);</span><br><span class="line">            <span class="keyword">super</span>.onDescriptorReadRequest(device, requestId, offset, descriptor);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDescriptorWriteRequest</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> requestId, BluetoothGattDescriptor descriptor, <span class="keyword">boolean</span> preparedWrite, <span class="keyword">boolean</span> responseNeeded, <span class="keyword">int</span> offset, <span class="keyword">byte</span>[] value)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt server descriptor was written."</span>);</span><br><span class="line">            <span class="keyword">super</span>.onDescriptorWriteRequest(device, requestId, descriptor, preparedWrite, responseNeeded, offset, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onExecuteWrite</span><span class="params">(BluetoothDevice device, <span class="keyword">int</span> requestId, <span class="keyword">boolean</span> execute)</span> </span>&#123;</span><br><span class="line">            Log.d(<span class="string">"GattServer"</span>, <span class="string">"Our gatt server on execute write."</span>);</span><br><span class="line">            <span class="keyword">super</span>.onExecuteWrite(device, requestId, execute);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<h4 id="8-_u6DFB_u52A0_u670D_u52A1_u5230_u5468_u8FB9server"><a href="#8-_u6DFB_u52A0_u670D_u52A1_u5230_u5468_u8FB9server" class="headerlink" title="8.添加服务到周边server"></a>8.添加服务到周边server</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gattServer.addService(deviceInfoService);</span><br></pre></td></tr></table></figure>
<h4 id="9-_u5F00_u542F_u5E7F_u64AD"><a href="#9-_u5F00_u542F_u5E7F_u64AD" class="headerlink" title="9.开启广播"></a>9.开启广播</h4><p>开启Service广播以及监听回调。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mLeAdvertiser.startAdvertising(settingBuilder.build(),</span><br><span class="line">advBuilder.build(), mAdvCallback);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> AdvertiseCallback mAdvCallback = <span class="keyword">new</span> AdvertiseCallback() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartFailure</span><span class="params">(<span class="keyword">int</span> errorCode)</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"advertise"</span>,<span class="string">"onStartFailure"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartSuccess</span><span class="params">(AdvertiseSettings settingsInEffect)</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"advertise"</span>,<span class="string">"onStartSuccess"</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<h4 id="10-_u505C_u6B62_u5E7F_u64AD"><a href="#10-_u505C_u6B62_u5E7F_u64AD" class="headerlink" title="10.停止广播"></a>10.停止广播</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mLeAdvertiser.stopAdvertising(mAdvCallback);</span><br></pre></td></tr></table></figure>
<h3 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h3><p>以上是实现一个BLE periphery的过程，BLE是通过Service以及Characteristic来传输数据的，每一个Service、Characteristic都有唯一的UUID来标识，数据是放在Characteristic中来传输的，BLE协议还规定，每个Characteristic的数据长度不能超过20个字节，超过的可做分包发送处理。</p>
<p>以上实现代码Github仓库地址：<a href="https://github.com/Llooper/BLEPeripheral" target="_blank" rel="external">Github</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android蓝牙4.0的BLE协议中，有两个角色，一个是中心（<code>Central</code>），一个是周边（<code>Periphery</code>）。本篇主要介绍BLE periphery的实现过程，BLE的介绍以及central的实现另外的篇幅再介绍。</p>
<p><a href="http://flintli.xyz/2016/06/27/Android-bluetooth-BLE-central/">Android 蓝牙 BLE Central实现</a></p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
      <category term="BLE" scheme="flintli.xyz/tags/BLE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android so库对应的源码路径列表]]></title>
    <link href="flintli.xyz/2016/06/15/Android-so-file-path/"/>
    <id>flintli.xyz/2016/06/15/Android-so-file-path/</id>
    <published>2016-06-15T07:54:34.000Z</published>
    <updated>2016-06-15T08:19:20.000Z</updated>
    <content type="html"><![CDATA[<p>对于Android系统开发人员而言，对源码进行修改再也正常不过。但是有时候需要改动一些so库的代码，找到对应的源码是一件比较麻烦的事，现列出一些so库对应的源码路径，以便之后查找方便。</p>
<a id="more"></a>
<blockquote>
<p>libandroid.so——frameworks/base/native/android<br>libandroid_runtime.so——frameworks/base/core/jni<br>libhwui.so——frameworks/base/libs/hwui<br>libstagefright_foundation.so——frameworks/av/media/libstagefright/foundation<br>libmedia_native.so——frameworks/av/media/libmedia_native<br>libmedia.so——frameworks/av/media/libmedia<br>libcamera_client.so——frameworks/av/camera<br>libbinder.so——frameworks/native/libs/binder<br>libcpustats.so——frameworks/native/libs/cpustats<br>libETC1.so——frameworks/native/opengl/libs<br>libgui.so——frameworks/native/libs/gui<br>libGLESv1_CM.so——frameworks/native/opengl/libs<br>libui.so——frameworks/native/libs/ui<br>libutils.so——frameworks/native/libs/utils<br>libstagefright_foundation.so——frameworks/av/media/libstagefright/foundation<br>libemoji.so——frameworks/opt/emoji<br>libaudioutils.so——system/media/audio_utils<br>libbluedroid.so——system/bluetooth/bluedroid<br>libcorkscrew.so——system/core/libcorkscrew<br>libcutils.so——system/core/libcutils<br>libnetutils.so——system/core/libnetutils<br>libusbhost.so——system/core/libusbhost<br>libssl.so——external/openssl<br>libstlport.so——external/stlport<br>libspeexresampler——external/speex<br>libsonivox.so——external/sonivox<br>libjpeg.so——external/jpeg<br>libcrypto.so——external/openssl<br>libcutils.so——system/core/libcutils<br>libdbus.so——external/dbus/dbus<br>libharfbuzz.so——external/harfbuzz<br>libgccdemangle——external/gcc-demangle<br>libhardware_legacy.so——hardware/libhardware_legacy<br>libgabi++.so——abi/cpp<br>libdvm.so——dalvik/vm<br>libc.so——bionic/libc        </p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>对于Android系统开发人员而言，对源码进行修改再也正常不过。但是有时候需要改动一些so库的代码，找到对应的源码是一件比较麻烦的事，现列出一些so库对应的源码路径，以便之后查找方便。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[输出 Android kernel log]]></title>
    <link href="flintli.xyz/2016/06/08/Android-kernel-log/"/>
    <id>flintli.xyz/2016/06/08/Android-kernel-log/</id>
    <published>2016-06-08T07:18:41.000Z</published>
    <updated>2016-06-08T07:20:37.000Z</updated>
    <content type="html"><![CDATA[<p>adb shell cat proc/kmsg &gt; kernel.txt</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>adb shell cat proc/kmsg &gt; kernel.txt</p>
]]>
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android has leaked window 分析]]></title>
    <link href="flintli.xyz/2016/06/03/android-has-leaked-window/"/>
    <id>flintli.xyz/2016/06/03/android-has-leaked-window/</id>
    <published>2016-06-03T06:30:44.000Z</published>
    <updated>2016-06-03T06:32:31.000Z</updated>
    <content type="html"><![CDATA[<p>XXX Activity has leaked window分析。</p>
<a id="more"></a>
<h3 id="leaked_window__u5206_u6790"><a href="#leaked_window__u5206_u6790" class="headerlink" title="leaked window 分析"></a>leaked window 分析</h3><p>Monkey测试xos过程中，出了很多leaked window的问题，现针对其中一个进行分析，作为例子参考。部分具体log如下，其余log在附件leak_window.txt中：</p>
<blockquote>
<p>android.view.WindowLeaked: Activity systems.xos.car.android.traficreport.MainActivity has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{41c6ee48 V.E….. ……ID 0,0-624,480} that was originally added here</p>
</blockquote>
<p>分析出错log，发现问题出在于</p>
<blockquote>
<p>E/WindowManager(  987):     at android.app.Activity.openOptionsMenu(Activity.java:2873)<br>E/WindowManager(  987):     at systems.xos.car.android.traficreport.MainActivity$4.run(MainActivity.java:227)</p>
</blockquote>
<p>顺着提示查看了MainActivity.java:227行的代码，为 </p>
<pre><code>new Handler().postDelayed(new Runnable() {
       @Override
       public void run() {
           openOptionsMenu();
       }
   }, 200);
</code></pre><p>看到了<code>openOptionsMenu()</code>，且在onResume中调用，猜测可能是由于<code>OptionsMenu</code>引起。继续往上分析log，查找导致出现泄漏的问题。在log日志的<code>188</code>行发现了一个输出日志<br><code>01-01 08:01:25.550 D/MainActivity(  987): onOptionsMenuClosed</code><br>此为调用了下函数的输出      </p>
<pre><code>@Override
public void onOptionsMenuClosed(Menu menu) {
    Log.d(&quot;MainActivity&quot;,&quot;onOptionsMenuClosed&quot;);
    super.onOptionsMenuClosed(menu);
    moveTaskToBack(true);
}
</code></pre><p>继续往上分析log，发现MainActivity start之后基本没做什么操作，也无其他异常，基本可以确定 leaked window为OptionsMenu引起的问题。接着对照盒子上的电子狗app进行一次同样的操作，即打开app，出现了OptionsMenu，然后退出。未发现问题。<br>继续分析代码，发现 <code>openOptionsMenu()</code>有200ms的延迟，猜测可能为monkey点击速度比人为操作快好几倍。</p>
<blockquote>
<p>打开app，还未openOptionsMenu便退出了app，导致了leaked window。</p>
</blockquote>
<p>分析log日志，发现了在<code>onOptionsMenuClosed</code>之前的第76以及其他几行存在：</p>
<pre><code>D/MainActivity(  987): KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=0, metaState=0, flags=0x8, repeatCount=0, eventTime=85698, downTime=85698, deviceId=-1, source=0x101 }   
</code></pre><p>即monkey执行了 keyCode=KEYCODE_BACK 操作退出了app，然后输出closed。但是延迟了200ms才<code>openOptionsMenu()</code>，此时MainActivity已被destroy，OptionsMenu无挂载窗口，导致了leaked window。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>XXX Activity has leaked window分析。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 系统崩溃日志收集上传]]></title>
    <link href="flintli.xyz/2016/05/19/Android-upload-dropbox-error/"/>
    <id>flintli.xyz/2016/05/19/Android-upload-dropbox-error/</id>
    <published>2016-05-19T03:53:29.000Z</published>
    <updated>2016-06-03T06:13:54.000Z</updated>
    <content type="html"><![CDATA[<p>Android系统日志收集与上传。</p>
<a id="more"></a>
<h2 id="Android_u7CFB_u7EDF_u65E5_u5FD7_u6536_u96C6_u4E0E_u4E0A_u4F20"><a href="#Android_u7CFB_u7EDF_u65E5_u5FD7_u6536_u96C6_u4E0E_u4E0A_u4F20" class="headerlink" title="Android系统日志收集与上传"></a>Android系统日志收集与上传</h2><blockquote>
<p>需求： 收集系统crash、anr等日志，并上传到服务器。<br>实现： 利用DropBoxManager持续化存储系统数据的机制，取得dropbox的日志文件并上传。</p>
</blockquote>
<h3 id="DropBoxManager_u7B80_u4ECB"><a href="#DropBoxManager_u7B80_u4ECB" class="headerlink" title="DropBoxManager简介"></a>DropBoxManager简介</h3><p>对DropBoxManager进行简单的介绍。</p>
<h4 id="u7CFB_u7EDF_u9519_u8BEF_u7C7B_u578BTAG"><a href="#u7CFB_u7EDF_u9519_u8BEF_u7C7B_u578BTAG" class="headerlink" title="系统错误类型TAG"></a>系统错误类型TAG</h4><ul>
<li><code>crash</code></li>
<li><code>anr</code></li>
<li><code>wtf</code></li>
<li><code>strict_mode</code></li>
<li><code>lowmem</code></li>
<li><code>watchdog</code></li>
<li><code>netstats_error</code></li>
<li><code>SYSTEM_TOMBSTONE</code></li>
<li><code>BATTERY_DISCHARGE_INFO</code></li>
</ul>
<p>以上是分析源码得出的DropBoxManager系统错误类型。</p>
<h4 id="u6587_u4EF6_u5B58_u50A8"><a href="#u6587_u4EF6_u5B58_u50A8" class="headerlink" title="文件存储"></a>文件存储</h4><p>DropBoxManager 使用的是文件存储, 所有的记录都存储在 /data/system/dropbox 目录中, 一条记录就是一个文件, 当文本文件的尺寸超过文件系统的最小区块尺寸后, DropBoxManager 还会自动压缩该文件, 通常文件名以调用 DropBoxManager 的 TAG 参数开头。</p>
<h4 id="u4F7F_u7528DropBoxManager"><a href="#u4F7F_u7528DropBoxManager" class="headerlink" title="使用DropBoxManager"></a>使用DropBoxManager</h4><p>每当DropBoxManager生成新的记录, 就会广播一个 <code>DropBoxManager.ACTION_DROPBOX_ENTRY_ADDED</code> Intent，日志收集系统只需接收广播，然后去读取文件，上传到服务器即可。<br>下面给出具体的代码示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> BroadcastReceiver BugReportReveiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (DropBoxManager.ACTION_DROPBOX_ENTRY_ADDED.equals(intent.getAction())) &#123;</span><br><span class="line">               tag = intent.getExtras().getString(DropBoxManager.EXTRA_TAG);</span><br><span class="line">               time = intent.getExtras().getLong(DropBoxManager.EXTRA_TIME);</span><br><span class="line">               Log.d(TAG, <span class="string">"BugReportReveiver onReceive..."</span>);</span><br><span class="line">               Log.d(TAG, <span class="string">"tag :"</span> + tag + <span class="string">"----- time :"</span> + time);</span><br><span class="line"></span><br><span class="line">               file = selectFile(getTagtype(tag)); <span class="comment">//getFile</span></span><br><span class="line">               sendErrorFileToserver(); <span class="comment">//upload</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> File <span class="title">selectFile</span><span class="params">(<span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">       String fileName = <span class="keyword">null</span>;</span><br><span class="line">       String path = <span class="string">"data/system/dropbox/"</span>;</span><br><span class="line">       <span class="keyword">switch</span>(type) &#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">           <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               fileName = path + tag + <span class="string">"@"</span> + time + <span class="string">".txt"</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">               fileName = path + tag + <span class="string">"@"</span> + time + <span class="string">".txt.gz"</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">default</span>:</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       file = <span class="keyword">new</span> File(fileName);</span><br><span class="line">       <span class="keyword">return</span> file;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] arr_tag = &#123;<span class="string">"system_app_crash"</span>,</span><br><span class="line">           <span class="string">"system_server_wtf"</span>,<span class="string">"system_app_anr"</span>&#125;;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getTagtype</span><span class="params">(String tag)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> iter = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (; iter &lt; arr_tag.length; iter++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (arr_tag[iter].equals(tag)) &#123;</span><br><span class="line">               <span class="keyword">return</span> iter;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android系统日志收集与上传。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[happy birthday]]></title>
    <link href="flintli.xyz/2016/05/19/happy-birthday/"/>
    <id>flintli.xyz/2016/05/19/happy-birthday/</id>
    <published>2016-05-18T16:00:00.000Z</published>
    <updated>2016-06-03T06:14:09.000Z</updated>
    <content type="html"><![CDATA[<p>又是一年，生日快乐！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>又是一年，生日快乐！</p>
]]>
    </summary>
    
      <category term="随笔" scheme="flintli.xyz/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[怎么替换AOSP默认的签名key]]></title>
    <link href="flintli.xyz/2016/05/18/Android-replace-the-key-int-the-aosp/"/>
    <id>flintli.xyz/2016/05/18/Android-replace-the-key-int-the-aosp/</id>
    <published>2016-05-18T07:53:08.000Z</published>
    <updated>2016-06-20T09:31:50.000Z</updated>
    <content type="html"><![CDATA[<p>本篇主要介绍aosp的key类型，以及如何替换AOSP原有签名key，生成自定义的key并对系统签名。</p>
<a id="more"></a>
<h3 id="u7B7E_u540D_u7C7B_u578B"><a href="#u7B7E_u540D_u7C7B_u578B" class="headerlink" title="签名类型"></a>签名类型</h3><p>Android的标准签名key文件位于<code>/build/target/product/security</code>目录下，主要有4个key，分别为：</p>
<ul>
<li><strong><code>testkey</code></strong>：普通签名APK，默认情况下使用。</li>
<li><strong><code>platform</code></strong>：该签名APK完成一些系统的核心。</li>
<li><strong><code>shared</code></strong>：该签名APK需要和home/contacts进程共享数据。</li>
<li><strong><code>media</code></strong>：使用android.media作为共享UID的APK签名。</li>
</ul>
<p>其中 <code>*.pk8</code>代表私钥，<code>*.x509.pem</code>公钥，一定是成对出现的。<br>testkey是作为android编译的时候默认的签名key，如果系统中的apk的Android.mk中没有设置<strong><code>LOCAL_CERTIFICATE</code></strong>的值，就默认使用<strong><code>testkey</code></strong>。    </p>
<p>而如果设置成：<br><strong><code>LOCAL_CERTIFICATE := platform</code></strong><br>就代表使用platform来签名，这样的话这个apk就拥有了和system相同的签名，因为系统级别的签名也是使用的platform来签名，此时使用<code>android:sharedUserId=&quot;android.uid.system&quot;</code>才有用！</p>
<h3 id="u81EA_u5B9A_u4E49_u7B7E_u540Dkey"><a href="#u81EA_u5B9A_u4E49_u7B7E_u540Dkey" class="headerlink" title="自定义签名key"></a>自定义签名key</h3><h4 id="key_u751F_u6210_u4ECB_u7ECD"><a href="#key_u751F_u6210_u4ECB_u7ECD" class="headerlink" title="key生成介绍"></a>key生成介绍</h4><p>在<code>/build/target/product/security</code>目录下有个README，里面说明了怎么制作这些key以及使用问题（android4.4）：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">The following commands were used to generate the test key pairs:</span><br><span class="line"></span><br><span class="line">  development/tools/make_key testkey  <span class="string">'/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'</span></span><br><span class="line">  development/tools/make_key platform <span class="string">'/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'</span></span><br><span class="line">  development/tools/make_key shared   <span class="string">'/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'</span></span><br><span class="line">  development/tools/make_key media    <span class="string">'/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'</span></span><br><span class="line"></span><br><span class="line">The following standard test keys are currently included:</span><br><span class="line"></span><br><span class="line">testkey -- a generic key <span class="keyword">for</span> packages that do not otherwise specify a key.</span><br><span class="line">platform -- a test key <span class="keyword">for</span> packages that are part of the core platform.</span><br><span class="line">shared -- a test key <span class="keyword">for</span> things that are shared in the home/contacts process.</span><br><span class="line">media -- a test key <span class="keyword">for</span> packages that are part of the media/download system.</span><br><span class="line"></span><br><span class="line">These test keys are used strictly in development, and should never be assumed</span><br><span class="line">to convey any sort of validity.  When $BUILD_SECURE=<span class="keyword">true</span>, the code should not</span><br><span class="line">honor these keys in any context.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">signing using the openssl <span class="title">commandline</span> <span class="params">(<span class="keyword">for</span> boot/system images)</span></span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">1. convert pk8 format key to pem format</span><br><span class="line">   % openssl pkcs8 -inform DER -nocrypt -in testkey.pk8 -out testkey.pem</span><br><span class="line"></span><br><span class="line">2. create a signature using the pem format key</span><br><span class="line">   % openssl dgst -binary -sha1 -sign testkey.pem FILE &gt; FILE.sig</span><br><span class="line"></span><br><span class="line">extracting <span class="keyword">public</span> keys <span class="keyword">for</span> embedding</span><br><span class="line">------------------------------------</span><br><span class="line">it's a Java tool</span><br><span class="line">but it generates C code</span><br><span class="line">take a look at commands/recovery/Android.mk</span><br><span class="line">you'll see it running $<span class="params">(HOST_OUT_JAVA_LIBRARIES)</span>/dumpkey.jar</span></span><br></pre></td></tr></table></figure>
<p>从README可知，key是通过<code>development/tools</code>目录下的<code>make_key</code>脚本生成的，脚本需要传入两个参数。其中第一个参数是key的名字，我们可以不修改，使用aosp默认的4个key的名字；第二个参数即是具体的一些属性，此为key真正的关键（我们需要修改的部分），下面对第二个参数的一些具体属性做出分析解释：</p>
<blockquote>
<p>C —&gt; Country Name (2 letter code)<br>ST —&gt; State or Province Name (full name)<br>L —&gt; Locality Name (eg, city)<br>O —&gt; Organization Name (eg, company)<br>OU —&gt; Organizational Unit Name (eg, section)<br>CN —&gt; Common Name (eg, your name or your server’s hostname)<br>emailAddress —&gt; Contact email address</p>
</blockquote>
<p>另外在是用<code>make_key</code>生成key的过程中会提示输入password，一般是不输入，直接enter的。</p>
<h4 id="u5220_u9664_u5DF2_u5B58_u5728_u7684key"><a href="#u5220_u9664_u5DF2_u5B58_u5728_u7684key" class="headerlink" title="删除已存在的key"></a>删除已存在的key</h4><p>进入到<code>/build/target/product/security</code>目录执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm ./*.p*</span><br></pre></td></tr></table></figure>
<p>删除全部已存在的key，然后重新生成新的key。</p>
<h4 id="u751F_u6210key"><a href="#u751F_u6210key" class="headerlink" title="生成key"></a>生成key</h4><p>返回到AOSP的根目录，使用<code>make_key</code>脚本去生成4个签名key。</p>
<h5 id="testkey"><a href="#testkey" class="headerlink" title="testkey"></a>testkey</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./development/tools/make_key build/target/product/security/testkey ‘/C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com’</span><br></pre></td></tr></table></figure>
<h5 id="media"><a href="#media" class="headerlink" title="media"></a>media</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./development/tools/make_key build/target/product/security/media ‘/C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com’</span><br></pre></td></tr></table></figure>
<h5 id="shared"><a href="#shared" class="headerlink" title="shared"></a>shared</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./development/tools/make_key build/target/product/security/shared ‘/C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com’</span><br></pre></td></tr></table></figure>
<h5 id="platform"><a href="#platform" class="headerlink" title="platform"></a>platform</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./development/tools/make_key build/target/product/security/platform ‘/C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com’</span><br></pre></td></tr></table></figure>
<h4 id="u9A8C_u8BC1key"><a href="#u9A8C_u8BC1key" class="headerlink" title="验证key"></a>验证key</h4><p>在生成4个key后，再使用<code>OpenSSL</code>的工具来验证一下生成的key是否正常。<br>进入到/build/target/product/security目录，执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -noout -subject -issuer -in media.x509.pem</span><br></pre></td></tr></table></figure>
<p>输出:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">subject= /C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com</span><br><span class="line">issuer= /C=US/ST=Utah/L=Salt Lake City/O=Android/OU=Android/CN=Android/emailAddress=flint@gexne.com</span><br></pre></td></tr></table></figure>
<p>另外3个key的验证类似media，就不再多做介绍。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -noout -subject -issuer -in shared.x509.pem</span><br><span class="line">openssl x509 -noout -subject -issuer -in platform.x509.pem</span><br><span class="line">openssl x509 -noout -subject -issuer -in testkey.x509.pem</span><br></pre></td></tr></table></figure>
<h4 id="u4FEE_u6539_u7CFB_u7EDF_u9ED8_u8BA4_u7B7E_u540Dkey"><a href="#u4FEE_u6539_u7CFB_u7EDF_u9ED8_u8BA4_u7B7E_u540Dkey" class="headerlink" title="修改系统默认签名key"></a>修改系统默认签名key</h4><p>在上面提到如果apk中的编译选项<code>LOCAL_CERTIFICATE</code>没有设置的话，就会使用默认的<code>testkey</code>作为签名key，我们可以修改成自己想要的key，按照上面的步骤制作一个<code>releasekey</code>，修改android配置在<code>/build/core/config.mk</code>中定义变量：</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/testkey</span><br></pre></td></tr></table></figure>
<p>TO </p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/releasekey</span><br></pre></td></tr></table></figure>
<p>生成<code>testkey</code>的时候，原先<code>testkey</code>的名字换成<code>releasekey</code>，步骤都一样。</p>
<p><strong>PS：可以不用修改testkey的名字，这个不是很关键。</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本篇主要介绍aosp的key类型，以及如何替换AOSP原有签名key，生成自定义的key并对系统签名。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android user版本编译]]></title>
    <link href="flintli.xyz/2016/05/16/Android-build-user/"/>
    <id>flintli.xyz/2016/05/16/Android-build-user/</id>
    <published>2016-05-16T12:16:02.000Z</published>
    <updated>2016-06-03T06:13:45.000Z</updated>
    <content type="html"><![CDATA[<p>怎么编译user版本的Android系统。</p>
<a id="more"></a>
<p>Android编译选项分别有3个，user，eng，userDebug。这3个选项分别对应的版本如下：</p>
<blockquote>
<p>eng：debug 版本<br>user: release 版本<br>userDebug版本：部分debug版本</p>
</blockquote>
<p>详细的介绍以及每个选项对应的功能权限在<a href="http://llooper.space/2016/05/11/Android-ADB%E7%8A%B6%E6%80%81%E5%BC%80%E5%85%B3/" target="_blank" rel="external">上一篇</a> 已经介绍过。</p>
<p>本篇主要介绍如何编译user版本（其他版本同理），以下全部代码都以rockchip作为示例。</p>
<ul>
<li><strong>修改脚本：</strong>user等编译选项主要由<code>device/rockchip/rkpx2/vendorsetup.sh</code>脚本进行控制。打开脚本找到<code>add_lunch_combo rkpx2-eng</code>项，将eng改为user。也即是<code>add_lunch_combo rkpx2-user</code>。</li>
<li><strong>加载脚本：</strong>脚本修改完成之后保存，要使其生效必须回到aosp根目录，执行如下<code>source build/envsetup.sh</code>使其加载进入makefile系统。</li>
<li><strong>选择user版本：</strong>加载完毕之后，还需选择user版本进行编译。使用<code>lunch</code>命令进行选择，在aosp根没目录执行<code>lunch</code>，然后选择<code>rkpx2-user</code>。</li>
<li><strong>make</strong></li>
</ul>
<p>执行make之后，可以看到输出日志，<code>TARGET_BUILD_VARIANT</code>对应的即是编译选项，<code>TARGET_BUILD_VARIANT=user</code>表明编译的是user版本。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>怎么编译user版本的Android系统。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android ADB 快关控制]]></title>
    <link href="flintli.xyz/2016/05/11/Android-ADB-control/"/>
    <id>flintli.xyz/2016/05/11/Android-ADB-control/</id>
    <published>2016-05-11T06:52:10.000Z</published>
    <updated>2016-06-20T09:29:06.000Z</updated>
    <content type="html"><![CDATA[<p>Android设备adb root权限控制以及 adb shell的开关控制。</p>
<a id="more"></a>
<h3 id="adb_root_u6743_u9650"><a href="#adb_root_u6743_u9650" class="headerlink" title="adb root权限"></a>adb root权限</h3><p>adb 的root权限是在system/core/adb/adb.c中控制。主要根据<code>ro.secure</code>以及 <code>ro.debuggable</code>等<code>system property</code> 来控制。默认即档ro.secure 为0 时，即开启root 权限，为1时再根据ro.debuggable等选项来确认是否可以用开启root 权限。</p>
<h3 id="user_eng__u7528_u6237_u7248_u672C_u5DEE_u5F02"><a href="#user_eng__u7528_u6237_u7248_u672C_u5DEE_u5F02" class="headerlink" title="user eng 用户版本差异"></a>user eng 用户版本差异</h3><p><code>ro.secure</code>以及<code>ro.debuggable</code>的值设置跟用户编译版本有关，一下是Google官方的描述。</p>
<p>When building for a particular product, it’s often useful to have minor variations on what is ultimately the final release build. These are the currently-defined “flavors” or “types” (we need to settle on a real name for these).</p>
<h4 id="eng"><a href="#eng" class="headerlink" title="eng"></a>eng</h4><p>This is the default flavor. A plain “make” is the same as “make eng”. droid is an alias for eng.</p>
<ul>
<li>Installs modules tagged with: eng, debug, shell_$(TARGET_SHELL), user, and/or development.</li>
<li>Installs non-APK modules that have no tags specified.<br>Installs APKs according to the product definition files, in addition to tagged APKs.</li>
<li>ro.secure=0</li>
<li>ro.debuggable=1</li>
<li>ro.kernel.android.checkjni=1</li>
<li>adb is enabled by default.</li>
</ul>
<h4 id="user"><a href="#user" class="headerlink" title="user"></a>user</h4><p><code>make user</code></p>
<p>This is the flavor intended to be the final release bits.</p>
<ul>
<li>Installs modules tagged with shell_$(TARGET_SHELL) and user.</li>
<li>Installs non-APK modules that have no tags specified.</li>
<li>Installs APKs according to the product definition files; tags are ignored for APK modules.</li>
<li>ro.secure=1</li>
<li>ro.debuggable=0</li>
<li>adb is disabled by default.</li>
</ul>
<h4 id="userdebug"><a href="#userdebug" class="headerlink" title="userdebug"></a>userdebug</h4><p><code>make userdebug</code><br>The same as user, except:</p>
<ul>
<li>Also installs modules tagged with debug.</li>
<li>ro.debuggable=1</li>
<li>adb is enabled by default.</li>
</ul>
<h3 id="adb_shell"><a href="#adb_shell" class="headerlink" title="adb shell"></a>adb shell</h3><p>以上是adb root权限相关的介绍。下面介绍怎么禁用设备的adb，也即是使得 adb shell失效，无法进入。</p>
<h4 id="u521D_u6B65_u65B9_u6848_u5B9E_u73B0"><a href="#u521D_u6B65_u65B9_u6848_u5B9E_u73B0" class="headerlink" title="初步方案实现"></a>初步方案实现</h4><blockquote>
<p>经过一段时间资料查找，adb shell的开关状态跟usb端口有关。可以通过<code>getprop</code>获取系统相关参数查看usb以及adb的状态。</p>
</blockquote>
<p><code>adb shell getprop &gt; prop.txt</code>将系统property的读取并写入prop.txt。usb控制adb的相应参数如下：</p>
<blockquote>
<pre><code>`[sys.usb.config]: [mass_storage,adb]`
`[persist.sys.usb.config]: [mass_storage,adb]`
</code></pre></blockquote>
<p><code>sys.usb.config</code>为不可修改的，如果需要改动，只能去写<code>persist.sys.usb.config</code>的值。<br><code>adb shell setprop persist.sys.usb.config mass_storage,adb</code>的形式可以为<code>persist.sys.usb.config</code>赋值，需要关闭adb只需将 <code>mass_storage,adb</code>改为<code>mass_storage,none</code>即可。</p>
<p><strong>ps: 注意adb关闭（none）后需要重启才能生效。</strong></p>
<h5 id="u5F00_u542Fadb_uFF1A"><a href="#u5F00_u542Fadb_uFF1A" class="headerlink" title="开启adb："></a>开启adb：</h5><blockquote>
<p>adb shell setprop persist.sys.usb.config mass_storage,adb</p>
</blockquote>
<h5 id="u5173_u95EDadb_uFF1A"><a href="#u5173_u95EDadb_uFF1A" class="headerlink" title="关闭adb："></a>关闭adb：</h5><blockquote>
<p>adb shell setprop persist.sys.usb.config mass_storage,none<br>adb reboot</p>
</blockquote>
<p>上面给出的方法可以有效的对adb进行开启关闭，但有一个不足的，adb一但关闭就不可再开启。因为adb关闭之后就无法再进入<code>adb shell</code>对设备进行adb命令操作，需要谨慎操作。</p>
<h4 id="u4F18_u5316_u65B9_u6848"><a href="#u4F18_u5316_u65B9_u6848" class="headerlink" title="优化方案"></a>优化方案</h4><p>由于上面所述方式存在很大的不足，现针对方案进行优化。通过代码的方式，对adb进行开关控制。<br>写一个demo app，设置一个开关，对adb进行开关控制。</p>
<h5 id="u4EE3_u7801_u5F00_u542Fadb_uFF1A"><a href="#u4EE3_u7801_u5F00_u542Fadb_uFF1A" class="headerlink" title="代码开启adb："></a>代码开启adb：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SystemProperties.set(<span class="string">"persist.sys.usb.config"</span>, <span class="string">"mass_storage,adb"</span>);</span><br></pre></td></tr></table></figure>
<h5 id="u4EE3_u7801_u5173_u95EDadb_uFF1A"><a href="#u4EE3_u7801_u5173_u95EDadb_uFF1A" class="headerlink" title="代码关闭adb："></a>代码关闭adb：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SystemProperties.set(<span class="string">"persist.sys.usb.config"</span>, <span class="string">"mass_storage,none"</span>);</span><br></pre></td></tr></table></figure>
<p>代码关闭adb之后仍需重启系统才能生效，附带上重启系统的代码。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">rebootSystem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"rebootSystem"</span>);</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_REBOOT);</span><br><span class="line">        intent.putExtra(<span class="string">"nowait"</span>, <span class="number">1</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"interval"</span>, <span class="number">1</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"window"</span>, <span class="number">0</span>);</span><br><span class="line">        mContext.sendBroadcast(intent);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><code>SystemProperties</code>类不对外开放，是Android的隐藏类，该app需要将源码放到aosp中去编译生成镜像再烧录。还需要注意的是，该app需要取得系统核心权限，AndroidManifest.xml中添加<br><code>android:sharedUserId=&quot;android.uid.system&quot;</code>，Android.mk申请<code>platform</code>权限，<code>LOCAL_CERTIFICATE := platform</code>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android设备adb root权限控制以及 adb shell的开关控制。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Andorid error ' *.jar odex has stale dependencies' 解决方案]]></title>
    <link href="flintli.xyz/2016/05/10/Android-error-jar-odex-has-stale-dependencies/"/>
    <id>flintli.xyz/2016/05/10/Android-error-jar-odex-has-stale-dependencies/</id>
    <published>2016-05-10T12:55:02.000Z</published>
    <updated>2016-06-20T09:35:32.000Z</updated>
    <content type="html"><![CDATA[<p>修改Android系统签名过程遇到的问题以及解决方法，主要是签名修改之后，编译烧录之后的img报了 <code>*.jar odex has stale dependencies</code>的错误。</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">I/dalvikvm(  <span class="number">621</span>): DexOpt: Some deps went away</span><br><span class="line">E/dalvikvm(  <span class="number">621</span>): /system/framework/android.policy.jar odex has stale dependencies</span><br><span class="line">I/dalvikvm(  <span class="number">621</span>): Zip is good, but no classes.dex inside, and no valid .odex file in the same directory</span><br><span class="line">D/dalvikvm(  <span class="number">621</span>): Unable to process classpath element <span class="string">'/system/framework/android.policy.jar'</span></span><br><span class="line">I/dalvikvm(  <span class="number">621</span>): DexOpt: Some deps went away</span><br><span class="line">E/dalvikvm(  <span class="number">621</span>): /system/framework/services.jar odex has stale dependencies</span><br><span class="line">I/dalvikvm(  <span class="number">621</span>): Zip is good, but no classes.dex inside, and no valid .odex file in the same directory</span><br><span class="line">D/dalvikvm(  <span class="number">621</span>): Unable to process classpath element <span class="string">'/system/framework/services.jar'</span></span><br><span class="line">I/dalvikvm(  <span class="number">621</span>): DexOpt: Some deps went away</span><br><span class="line">E/dalvikvm(  <span class="number">621</span>): /system/framework/apache-xml.jar odex has stale dependencies</span><br><span class="line">I/dalvikvm(  <span class="number">621</span>): Zip is good, but no classes.dex inside, and no valid .odex file in the same directory</span><br><span class="line">D/dalvikvm(  <span class="number">621</span>): Unable to process classpath element <span class="string">'/system/framework/apache-xml.jar'</span></span><br></pre></td></tr></table></figure>
<p>主要错误情况如上所示，表现为 jar包 odex has stale dependencies。经过网上查找资料以及分析之后得出结论。<br>原因是<code>build/core/dex_preopt.mk</code>里面的宏<code>DEXPREOPT_BOOT_JARS</code>和<code>init.rc</code>里面的宏BOOTCLASSPATH所赋值的包的位置不一样，把它们对应起来就解决了。</p>
<p>上面<code>DEXPREOPT_BOOT_JARS</code>不一定定义在<code>dex_preopt.mk</code>文件中，需要根据你当前的系统进行分析。主要找准了 <code>DEXPREOPT_BOOT_JARS</code>定义的位置，以及 <code>init.rc</code>中的位置，<code>init.rc</code>中的<code>DEXPREOPT_BOOT_JARS</code>也有可能在<code>init.environment.rc</code>中。将俩边的jar包的顺序以及文件名称对应上就可以。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>修改Android系统签名过程遇到的问题以及解决方法，主要是签名修改之后，编译烧录之后的img报了 <code>*.jar odex has stale dependencies</code>的错误。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android ActivityManager MOVE_TASK_WITH_HOME属性说明]]></title>
    <link href="flintli.xyz/2016/05/10/Android-ActivityManager-MOVE-TASK-WITH-HOME/"/>
    <id>flintli.xyz/2016/05/10/Android-ActivityManager-MOVE-TASK-WITH-HOME/</id>
    <published>2016-05-10T12:43:06.000Z</published>
    <updated>2016-06-20T09:28:29.000Z</updated>
    <content type="html"><![CDATA[<p>ActivityManager的flag MOVE_TASK_WITH_HOME分析</p>
<a id="more"></a>
<p><code>MOVE_TASK_WITH_HOME</code>作为一个flag定义于ActivityManager中。主要是做为<code>moveTaskToFront()</code>的一个参数。</p>
<p>/**   </p>
<ul>
<li>Flag for {@link #moveTaskToFront(int, int)}: also move the “home”   </li>
<li>activity along with the task, so it is positioned immediately behind   </li>
<li><p>the task.<br>*/</p>
<p>   public static final int MOVE_TASK_WITH_HOME = 0x00000001;</p>
</li>
</ul>
<p>从命名跟代码中的注释就可以了解到，设置了这个flag，那么在将这个task移到栈的顶部时，home的task也要相应的往上移动，移到顶部task的下面。</p>
<p>那么当设置了这个flag的task移到栈的顶部后，栈中task的顺序应该如下：</p>
<table>
<thead>
<tr>
<th>task</th>
</tr>
</thead>
<tbody>
<tr>
<td>home</td>
</tr>
<tr>
<td>task1</td>
</tr>
<tr>
<td>…….</td>
</tr>
</tbody>
</table>
<p>task has flag <code>MOVE_TASK_WITH_HOME</code></p>
<p>那么在按back键时，task退出，home在task之下，应该resume home。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ActivityManager的flag MOVE_TASK_WITH_HOME分析</p>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AOSP SystemUI之RecentsApp篇（一）]]></title>
    <link href="flintli.xyz/2016/03/16/Android-systemui-recents-1/"/>
    <id>flintli.xyz/2016/03/16/Android-systemui-recents-1/</id>
    <published>2016-03-16T14:35:19.000Z</published>
    <updated>2016-06-20T09:36:10.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>本篇主要介绍systemui的主要组成部分RecentsApp也就是最近任务列表的启动流程。</p>
</blockquote>
<a id="more"></a>
<p>下面主要涉及到的文件的路径汇总：<br><code>framework/base/services/input/InputReader.cpp</code><br><code>framework/base/services/input/InputDispatcher.cpp</code><br><code>framework/base/services/java/com/android/server/input/InputManagerService.java</code><br><code>framework/base/services/java/com/android/server/am/ActivityManagerService.java</code><br><code>framework/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java</code><br><code>framework/base/services/java/com/android/sever/StatusBarManagerService.java</code><br><code>framework/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java</code>    </p>
<h3 id="u6982_u8FF0"><a href="#u6982_u8FF0" class="headerlink" title="概述"></a>概述</h3><p>本篇主要介绍RecentsApp的俩种启动方式，风别为：<br>1) <code>adb shell input keyevent KEYCODE_APP_SWITCH</code><br>2) <code>NavigationBar</code>   </p>
<h3 id="adb_u542F_u52A8"><a href="#adb_u542F_u52A8" class="headerlink" title="adb启动"></a>adb启动</h3><h4 id="u8F93_u5165_u6D41_u7A0B"><a href="#u8F93_u5165_u6D41_u7A0B" class="headerlink" title="输入流程"></a>输入流程</h4><p>先从adb启动介绍开始。Android的keyevent的输入事件在此就不过多介绍，简要的过一下流程。先是发送某一个KeyEvent，<code>InputReader.cpp</code>读取输入事件，交给<code>InputDispatcher.cpp</code>，它负责事件的处理以及分发。然后转交给Java framework层的<code>IMS</code>，<code>IMS</code>处理过后转交给<code>AMS</code>，<code>AMS</code>继续往上层传递到<code>PhoneWindowManager</code>，这是一个Android framework层中一个极其重要的类，它管理着Android全部窗口策略，以及按键事件的分发处理。</p>
<h4 id="PhoneWindowManager"><a href="#PhoneWindowManager" class="headerlink" title="PhoneWindowManager"></a>PhoneWindowManager</h4><p><code>PhoneWindowManager.java</code>接收到<code>KEYCODE_APP_SWITCH</code>事件后做了如下操作：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_APP_SWITCH) &#123;</span><br><span class="line">	<span class="keyword">if</span> (!keyguardOn) &#123;</span><br><span class="line">    	<span class="keyword">if</span> (down &amp;&amp; repeatCount == <span class="number">0</span>) &#123;</span><br><span class="line">			preloadRecentApps();</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!down) &#123;</span><br><span class="line">			toggleRecentApps();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>keyguardOn</code>是用来判断当前是否处于锁屏状态，从上边的if块中明显可以看出，<code>KEYCODE_APP_SWITCH</code> down的时候调用了<code>preloadRecentApps()</code>，up的时候调用了<code>toggleRecentApps()</code>，顺序显然是先preload再toggle。<br>转去分析这俩个函数，看看分别做了什么操作，它们的实现同样位于<code>PhoneWindowManager</code>中。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">preloadRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       mPreloadedRecentApps = <span class="keyword">true</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           IStatusBarService statusbar = getStatusBarService();</span><br><span class="line">           <span class="keyword">if</span> (statusbar != <span class="keyword">null</span>) &#123;</span><br><span class="line">               statusbar.preloadRecentApps();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">           Slog.e(TAG, <span class="string">"RemoteException when preloading recent apps"</span>, e);</span><br><span class="line">           <span class="comment">// re-acquire status bar service next time it is needed.</span></span><br><span class="line">           mStatusBarService = <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">toggleRecentApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mPreloadedRecentApps = <span class="keyword">false</span>; <span class="comment">// preloading no longer needs to be canceled</span></span><br><span class="line">    sendCloseSystemWindows(SYSTEM_DIALOG_REASON_RECENT_APPS);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        IStatusBarService statusbar = getStatusBarService();</span><br><span class="line">        <span class="keyword">if</span> (statusbar != <span class="keyword">null</span>) &#123;</span><br><span class="line">            statusbar.toggleRecentApps();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Slog.e(TAG, <span class="string">"RemoteException when showing recent apps"</span>, e);</span><br><span class="line">        <span class="comment">// re-acquire status bar service next time it is needed.</span></span><br><span class="line">        mStatusBarService = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>俩个函数使用了同样的一个<code>IStatusBarService</code>，去看看import，找出了它的路径为：<br><code>import com.android.internal.statusbar.IStatusBarService;</code><br>而且<code>getStatusBarService()</code>的实现如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IStatusBarService <span class="title">getStatusBarService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mServiceAquireLock) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mStatusBarService == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mStatusBarService = IStatusBarService.Stub.asInterface(</span><br><span class="line">                    ServiceManager.getService(<span class="string">"statusbar"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mStatusBarService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由此可知<code>IStatusBarService</code>是一个<code>AIDL</code>，在<code>PhoneWindowManager</code>中获取到一个实例，与之跨进程进行通信。从名字顺藤摸瓜，找到services下的<code>StatusBarManagerService</code>，就是此AIDL的java实现。</p>
<h4 id="StatusBarManagerService"><a href="#StatusBarManagerService" class="headerlink" title="StatusBarManagerService"></a>StatusBarManagerService</h4><h3 id="NavigationBar"><a href="#NavigationBar" class="headerlink" title="NavigationBar"></a>NavigationBar</h3>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>本篇主要介绍systemui的主要组成部分RecentsApp也就是最近任务列表的启动流程。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Android" scheme="flintli.xyz/tags/Android/"/>
    
      <category term="systemui" scheme="flintli.xyz/tags/systemui/"/>
    
  </entry>
  
</feed>
